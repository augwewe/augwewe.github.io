export const pagesRoutes = [
  ["v-8daa1a0e","/",{"y":"h","t":"augwewe","i":"home"},["/index.html","/README.md"]],
  ["v-184f4da6","/intro.html",{"d":"2022-09-04T12:11:00.000Z","l":"2022年9月4日","e":"<h1> Intro Page</h1>\n<p>Place your introducation and profile here.</p>\n","r":{"minutes":0.15,"words":44},"y":"a","t":"关于博主","i":"home"},["/intro","/intro.md"]],
  ["v-3d348e0b","/Blog/2022/Try_Exception.html",{"a":"cava","d":"2022-10-30T12:04:21.000Z","l":"2022年10月30日","c":["notebook","VuePress"],"g":["Vue","VuePress"],"u":false,"o":true,"e":"<h2> 异常捕获</h2>\n<h3> try........exception</h3>\n<p>1.一个try一个except ,except中可以捕获多种异常类型，try子句中若遇到执行有错误的语句1号，其余下的语句都将被忽略，捕获1号语句中的异常</p>\n<p>2.异常类型可以放在一个元组中</p>\n<p>3.非系统型异常可以用Except统一捕获</p>\n<p>4.finally中的语句表示，无论如何都是会被执行的</p>\n<div class=\"language-python line-numbers-mode\" data-ext=\"py\"><pre class=\"language-python\"><code><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        the_num<span class=\"token operator\">=</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"please enter here:\"</span><span class=\"token punctuation\">)</span>\n        num1<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>the_num<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        num2<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>the_num<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        the_result<span class=\"token operator\">=</span>num1<span class=\"token operator\">+</span>num2\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>the_result<span class=\"token punctuation\">)</span>\n        test <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"haha\"</span><span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">break</span>\n    <span class=\"token comment\">#写法1</span>\n    <span class=\"token comment\"># except ValueError as err:</span>\n    <span class=\"token comment\">#     print(\"Value Err is {}\".format(err))</span>\n    <span class=\"token comment\"># except TypeError as err:</span>\n    <span class=\"token comment\">#     print(\"Type Err is {}\".format(err))</span>\n    <span class=\"token comment\">#写法2</span>\n    <span class=\"token keyword\">except</span><span class=\"token punctuation\">(</span>ValueError<span class=\"token punctuation\">,</span>TypeError<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> err<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The Err is {}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># finally:</span>\n    <span class=\"token comment\">#     print(\"这里是无论是否异常，都将执行的内容\")</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"continue\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span>\n<span class=\"token comment\">#输出</span>\nplease enter here<span class=\"token punctuation\">:</span><span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">2</span>\n<span class=\"token number\">3</span>\nThe Err <span class=\"token keyword\">is</span> unhashable <span class=\"token builtin\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'list'</span>\nplease enter here<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span>\nplease enter here<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> ss\nThe Err <span class=\"token keyword\">is</span> invalid literal <span class=\"token keyword\">for</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">with</span> base <span class=\"token number\">10</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'ss'</span>\nplease enter here<span class=\"token punctuation\">:</span>\n<span class=\"token comment\">#因为TypeError的try子句顺序在ValueError之后，当ValueError执行捕获异常时，TypeError就不会被执行</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":1.05,"words":314},"y":"a","t":"异常捕获Try..exception","i":"vue"},["/Blog/2022/Try_Exception","/Blog/2022/Try_Exception.md"]],
  ["v-1a65e30a","/Blog/2022/Crawl/Img_Save.html",{"a":"cava","d":"2023-01-05T23:35:21.000Z","l":"2023年1月6日","c":["notebook"],"g":["爬虫技术"],"u":false,"o":true,"e":"<h3> 爬虫技术-存储网页所有图片</h3>\n<div class=\"language-python line-numbers-mode\" data-ext=\"py\"><pre class=\"language-python\"><code><span class=\"token keyword\">import</span> re<span class=\"token punctuation\">,</span> requests<span class=\"token punctuation\">,</span>cchardet<span class=\"token punctuation\">,</span>urllib<span class=\"token punctuation\">.</span>parse<span class=\"token punctuation\">,</span>traceback\n<span class=\"token keyword\">from</span> urllib<span class=\"token punctuation\">.</span>parse <span class=\"token keyword\">import</span> urlparse\n<span class=\"token keyword\">from</span> urllib<span class=\"token punctuation\">.</span>parse <span class=\"token keyword\">import</span> urljoin\n<span class=\"token keyword\">from</span> requests<span class=\"token punctuation\">.</span>exceptions <span class=\"token keyword\">import</span> RequestException<span class=\"token punctuation\">,</span>ProxyError<span class=\"token punctuation\">,</span>SSLError\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">IMGSAVE</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>url <span class=\"token operator\">=</span> url\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">ask_url</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>url<span class=\"token punctuation\">,</span>headers<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span>binary<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>debug<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token string\">\"https\"</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> url<span class=\"token punctuation\">:</span>\n            url <span class=\"token operator\">=</span> <span class=\"token string\">\"https://\"</span><span class=\"token operator\">+</span>url\n        <span class=\"token keyword\">global</span> status<span class=\"token punctuation\">,</span>html<span class=\"token punctuation\">,</span>redirected_url\n        the_headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"User-Agent\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36\"</span>\n    <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> headers<span class=\"token punctuation\">:</span>\n            the_headers <span class=\"token operator\">=</span> headers\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            response<span class=\"token operator\">=</span>requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>headers<span class=\"token operator\">=</span>the_headers<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span>timeout<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> response<span class=\"token punctuation\">.</span>status_code <span class=\"token operator\">==</span> <span class=\"token number\">200</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> binary<span class=\"token punctuation\">:</span>\n                    html <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>content\n                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                    encoding <span class=\"token operator\">=</span> cchardet<span class=\"token punctuation\">.</span>detect<span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">'encoding'</span><span class=\"token punctuation\">]</span>\n                    html <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span>encoding<span class=\"token punctuation\">)</span>\n                status <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>status_code\n                redirected_url <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>url\n\n        <span class=\"token keyword\">except</span><span class=\"token punctuation\">(</span>RequestException<span class=\"token punctuation\">,</span>ProxyError<span class=\"token punctuation\">,</span>SSLError<span class=\"token punctuation\">)</span><span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> debug<span class=\"token punctuation\">:</span>\n                traceback<span class=\"token punctuation\">.</span>print_exc<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            msg <span class=\"token operator\">=</span> <span class=\"token string\">'Failed downled:{}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> binary<span class=\"token punctuation\">:</span>\n                html <span class=\"token operator\">=</span> <span class=\"token string\">b''</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                html <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n            status<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n        <span class=\"token keyword\">return</span> status<span class=\"token punctuation\">,</span>html<span class=\"token punctuation\">,</span>redirected_url\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">regex</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        pattern <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;img.*?src=\"(.*?)\".*?&gt;'</span><span class=\"token punctuation\">,</span>re<span class=\"token punctuation\">.</span>S<span class=\"token punctuation\">)</span>\n        result <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>pattern<span class=\"token punctuation\">,</span>html<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> result\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">save_img</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>filename<span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span><span class=\"token string\">\"wb\"</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">as</span> fb<span class=\"token punctuation\">:</span>\n            fb<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">suffix</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        suffix<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">\".png\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\".jpg\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\".jpge\"</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">#可以添加任意后缀到列表中</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> suffix<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> i <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> path<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">continue</span>\n            <span class=\"token keyword\">return</span>  i\n    <span class=\"token keyword\">def</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        status<span class=\"token punctuation\">,</span> html<span class=\"token punctuation\">,</span> redirected_url <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>ask_url<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url<span class=\"token punctuation\">,</span> debug<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n        template <span class=\"token operator\">=</span> <span class=\"token string\">\"{scheme}://{netloc}\"</span> \n        the_parse <span class=\"token operator\">=</span> urlparse<span class=\"token punctuation\">(</span>redirected_url<span class=\"token punctuation\">)</span>\n        url <span class=\"token operator\">=</span> template<span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>scheme<span class=\"token operator\">=</span>the_parse<span class=\"token punctuation\">.</span>scheme<span class=\"token punctuation\">,</span> netloc<span class=\"token operator\">=</span>the_parse<span class=\"token punctuation\">.</span>netloc<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 指定</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n        r_u <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>regex<span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 同下方解析中的path</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> r_u<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">pass</span>\n        img_urls <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>urljoin<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> img <span class=\"token keyword\">in</span> r_u<span class=\"token punctuation\">]</span>\n        <span class=\"token comment\"># print(img_urls)</span>\n        <span class=\"token keyword\">for</span> index<span class=\"token punctuation\">,</span> url <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>img_urls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            postffix <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>suffix<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n            filename <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>postffix<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span>\n            content <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>ask_url<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> debug<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> binary<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n            self<span class=\"token punctuation\">.</span>save_img<span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    url<span class=\"token operator\">=</span><span class=\"token string\">\"www.bbiquge.net\"</span>\n    work<span class=\"token operator\">=</span>IMGSAVE<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n    work<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":1.42,"words":425},"y":"a","t":"存储网页所有图片","i":"vue"},["/Blog/2022/Crawl/Img_Save","/Blog/2022/Crawl/Img_Save.md"]],
  ["v-3260c849","/Blog/2022/Crawl/NovelCrawl.html",{"a":"cava","d":"2022-11-03T12:04:21.000Z","l":"2022年11月3日","c":["notebook"],"g":["爬虫技术"],"u":false,"o":true,"n":true,"r":{"minutes":0.52,"words":156},"y":"a","t":"笔趣阁-盗墓笔记小说页面爬取","i":"vue"},["/Blog/2022/Crawl/NovelCrawl","/Blog/2022/Crawl/NovelCrawl.md"]],
  ["v-101c6502","/Blog/2022/Crawl/ScrapeMovie.html",{"a":"cava","d":"2022-10-30T12:04:21.000Z","l":"2022年10月30日","c":["notebook"],"g":["爬虫技术 猫眼电影"],"u":false,"o":true,"n":true,"r":{"minutes":4.02,"words":1206},"y":"a","t":"猫眼Top100榜单分析-进阶","i":"vue"},["/Blog/2022/Crawl/ScrapeMovie","/Blog/2022/Crawl/ScrapeMovie.md"]],
  ["v-38968456","/Blog/2022/Crawl/TianMaoAnalysi.html",{"a":"cava","d":"2022-10-30T12:04:21.000Z","l":"2022年10月30日","c":["notebook"],"g":["爬虫技术 猫眼电影"],"u":false,"o":true,"n":true,"r":{"minutes":1.87,"words":560},"y":"a","t":"猫眼Top100榜单分析-进阶","i":"vue"},["/Blog/2022/Crawl/TianMaoAnalysi","/Blog/2022/Crawl/TianMaoAnalysi.md"]],
  ["v-a81dc0b4","/Blog/2022/Crawl/TianMaoCrawl.html",{"a":"cava","d":"2022-11-28T12:04:21.000Z","l":"2022年11月28日","c":["notebook"],"g":["爬虫技术 猫眼电影"],"u":false,"o":true,"n":true,"r":{"minutes":2.59,"words":777},"y":"a","t":"猫眼Top100榜单第1页数据爬取","i":"vue"},["/Blog/2022/Crawl/TianMaoCrawl","/Blog/2022/Crawl/TianMaoCrawl.md"]],
  ["v-2d608068","/Blog/2022/Crawl/TianMaoSave.html",{"a":"cava","d":"2022-10-30T12:04:21.000Z","l":"2022年10月30日","c":["notebook"],"g":["爬虫技术 猫眼电影"],"u":false,"o":true,"n":true,"r":{"minutes":3.5,"words":1049},"y":"a","t":"猫眼Top100榜单分析-保存（JSON)","i":"vue"},["/Blog/2022/Crawl/TianMaoSave","/Blog/2022/Crawl/TianMaoSave.md"]],
  ["v-576fad4a","/Blog/2022/MongoDB_/About_MGdb.html",{"a":"cava","d":"2023-01-03T13:04:21.000Z","l":"2023年1月3日","c":["notebook"],"g":["爬虫技术","MongoDB"],"u":false,"o":true,"e":"<h2> MongoDB-pymongo</h2>\n<p>导入库 import pymongo</p>\n<h3> 1. 连接数据库</h3>\n<div class=\"language-python line-numbers-mode\" data-ext=\"py\"><pre class=\"language-python\"><code>client<span class=\"token operator\">=</span>pymongo<span class=\"token punctuation\">.</span>MongoClient<span class=\"token punctuation\">(</span>host<span class=\"token operator\">=</span><span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">,</span>port<span class=\"token operator\">=</span><span class=\"token number\">27017</span><span class=\"token punctuation\">)</span>\nclient<span class=\"token operator\">=</span>pymongo<span class=\"token punctuation\">.</span>MongoClient<span class=\"token punctuation\">(</span><span class=\"token string\">'mongodb://localhost:27017/'</span><span class=\"token punctuation\">)</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":1.68,"words":504},"y":"a","t":"pymongo","i":"vue"},["/Blog/2022/MongoDB_/About_MGdb","/Blog/2022/MongoDB_/About_MGdb.md"]],
  ["v-65fa83dc","/Blog/2022/MongoDB_/MGdb.html",{"a":"cava","d":"2023-01-03T13:04:21.000Z","l":"2023年1月3日","c":["notebook"],"g":["爬虫技术"],"u":false,"o":true,"e":"<h2> MongoDB 6.0教程</h2>\n<h3> 1.1下载MongoDB</h3>\n<p><a href=\"https://www.mongodb.com/try/download/community\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.mongodb.com/try/download/community</a></p>\n<p></p>\n<p>下载对应的版本</p>\n<p></p>\n<p>选custom可自定义安装路径，complete默认路径</p>\n<p>后续点击next,，选择不勾选(<em>Install MongoDB Compass</em>),直至install，勾选后下载安装速度会较慢些。</p>","r":{"minutes":1.32,"words":397},"y":"a","t":"MongoDB教程 6.0版","i":"vue"},["/Blog/2022/MongoDB_/MGdb","/Blog/2022/MongoDB_/MGdb.md"]],
  ["v-6ca27956","/Blog/2022/Gra/About_Django.html",{"a":"cava","d":"2023-01-01T12:04:21.000Z","l":"2023年1月1日","c":["notebook"],"g":["python Web框架"],"u":false,"o":true,"e":"<h2> Django</h2>\n<h3> 为什么要用虚拟环境？</h3>\n<p>在一台电脑上，想开发多个不同的项目， 需要用到同一个包的不同版本， 如果使用上面的命令， 在同一个目录下安装或者更新， 新版本会覆盖以前的版本， 其它的项目就无法运行了。</p>\n<p>在使用django开发项目的时候，一个环境只能对应一个项目，因为这样可以方便管理第三方包，每个项目使用的第三方可能不一样，若不安装虚拟环境、都装在系统里面，每次项目加载都需要加载所有的安装包，影响效率。</p>\n<h3> 1.Django环境搭建</h3>\n<p>创建文件夹‘MY_Web'</p>\n<p>进入此文件夹路径下输入以下命令</p>","r":{"minutes":1.3,"words":390},"y":"a","t":"Django","i":"vue"},["/Blog/2022/Gra/About_Django","/Blog/2022/Gra/About_Django.md"]],
  ["v-75757bb2","/Blog/2022/Gra/About_Request.html",{"a":"cava","d":"2022-12-30T17:04:21.000Z","l":"2022年12月31日","c":["notebook"],"g":["爬虫技术"],"u":false,"o":true,"e":"<h2> 1.获取request 以文本形式</h2>\n<div class=\"language-python line-numbers-mode\" data-ext=\"py\"><pre class=\"language-python\"><code>url<span class=\"token operator\">=</span><span class=\"token string\">\"https://ssr1.scrape.center/\"</span>\nresponse<span class=\"token operator\">=</span>requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":1.65,"words":494},"y":"a","t":"request","i":"vue"},["/Blog/2022/Gra/About_Request","/Blog/2022/Gra/About_Request.md"]],
  ["v-daa77b70","/Blog/2022/Gra/About_aiottp.html",{"a":"cava","d":"2022-10-30T12:04:21.000Z","l":"2022年10月30日","c":["notebook"],"g":["python","爬虫"],"u":false,"o":true,"e":"<h2> aiottp</h2>\n<h3> 概念</h3>\n<p>iohttp 是一个基于 asyncio 的异步 HTTP 网络模块，它既提供了服务端，又提供了客户端。其中我们用服务端可以搭建一个支持异步处理的服务器，用于处理请求并返回响应，类似于 Django、Flask、Tornado 等一些 Web 服务器。而客户端我们就可以用来发起请求，就类似于 requests 来发起一个 HTTP 请求然后获得响应，但 requests 发起的是同步的网络请求，而 aiohttp 则发起的是异步的。</p>\n<h3> 1. attiop基本案例代码</h3>\n<div class=\"language-python line-numbers-mode\" data-ext=\"py\"><pre class=\"language-python\"><code><span class=\"token keyword\">import</span> aiohttp\n<span class=\"token keyword\">import</span> asyncio\n\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">with</span> session<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> response<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">.</span>status\n\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">with</span> aiohttp<span class=\"token punctuation\">.</span>ClientSession<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> session<span class=\"token punctuation\">:</span>\n        html<span class=\"token punctuation\">,</span> status <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> fetch<span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">,</span> <span class=\"token string\">'https://augwewe.cn'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'html: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>html<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">100]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">...'</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'status: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    loop <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>get_event_loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n输出<span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span>\nhtml<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>!DOCTYPE html<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>html lang<span class=\"token operator\">=</span><span class=\"token string\">\"zh-CN\"</span> data<span class=\"token operator\">-</span>theme<span class=\"token operator\">=</span><span class=\"token string\">\"light\"</span><span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>head<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>meta charset<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>me<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\nstatus<span class=\"token punctuation\">:</span> <span class=\"token number\">200</span>\n\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":5.06,"words":1519},"y":"a","t":"aiottip","i":"vue"},["/Blog/2022/Gra/About_aiottp","/Blog/2022/Gra/About_aiottp.md"]],
  ["v-9623f7b0","/Blog/2022/Gra/About_pymysql.html",{"a":"cava","d":"2023-01-07T23:36:21.000Z","l":"2023年1月8日","c":["notebook"],"g":["爬虫技术","数据库"],"u":false,"o":true,"e":"<h2> Python 之站在高层框架下的 SQLAIchemy 操作 MySQL（关系型数据库)</h2>\n<h3> 定义</h3>\n<p>MySql是关系型数据库管理系统。</p>\n<p>Flask:Python Web 开发界主力——Flask。使用 SQLAlchemy 进行数据库开发。使用 ORM 是大势所趋。</p>\n<p>ORM框架:对数据库的映射;该框架建立在数据库 API 之上，使用关系对象映射进行数据库操作，简言之便是：将对象转换成 SQL，然后使用数据 API 执行 SQL 并获取执行结果。</p>\n<h3> 数据库命令</h3>\n<p>1.登录数据库</p>\n<p>mysql  -u root -p</p>","r":{"minutes":5.05,"words":1515},"y":"a","t":"Python 之站在高层框架下的 SQLAIchemy 操作 MySQL","i":"vue"},["/Blog/2022/Gra/About_pymysql","/Blog/2022/Gra/About_pymysql.md"]],
  ["v-59e989a2","/Blog/2022/Gra/AotherWay.html",{"a":"cava","d":"2022-10-30T12:04:21.000Z","l":"2022年10月30日","c":["notebook"],"g":["python","爬虫"],"u":false,"o":true,"e":"<h2> 异步协程</h2>\n<p>如下所示，爬取若干个url,消耗的时间是每个url所需的时间之和。</p>\n<div class=\"language-python line-numbers-mode\" data-ext=\"py\"><pre class=\"language-python\"><code><span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">def</span> <span class=\"token function\">crawl_page</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"crawling{}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    sleep_time<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"_\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>sleep_time<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OK{}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>urls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> url <span class=\"token keyword\">in</span> urls<span class=\"token punctuation\">:</span>\n        crawl_page<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">%</span>time main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"url_1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"url_2\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"url_3\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"url_4\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n输出<span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span>\nOKurl_1\ncrawlingurl_2\nOKurl_2\ncrawlingurl_3\nOKurl_3\ncrawlingurl_4\nOKurl_4\nCPU times<span class=\"token punctuation\">:</span> total<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> ns\nWall time<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span> s\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":3.95,"words":1186},"y":"a","t":"异步协程","i":"vue"},["/Blog/2022/Gra/AotherWay","/Blog/2022/Gra/AotherWay.md"]],
  ["v-0f8f5bb7","/Blog/2022/Gra/CrawlBase.html",{"a":"cava","d":"2023-01-01T12:04:21.000Z","l":"2023年1月1日","c":["notebook"],"g":["爬虫技术"],"u":false,"o":true,"e":"<h3> 数据存储至SQLite中</h3>\n<p>1.连接数据库</p>\n<p>2.读取json文件</p>\n<p>3.不知如何将数据形式为列表的存入sqlite中，例如电影剧情分类有武侠，剧情，人物。</p>\n<div class=\"language-python line-numbers-mode\" data-ext=\"py\"><pre class=\"language-python\"><code>    <span class=\"token keyword\">def</span> <span class=\"token function\">read_json</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>filename<span class=\"token punctuation\">,</span>read_type<span class=\"token operator\">=</span><span class=\"token string\">\"json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        conn <span class=\"token operator\">=</span> sqlite3<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token string\">'D:\\SQLite\\data\\cava.db'</span><span class=\"token punctuation\">)</span>\n        conn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''\n                            CREATE TABLE MOVIE_DETAIL\n                            (\n                              Id  INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,\n                              Title  VARCHAR NOT NULL,\n                              Introduction VARCHAR NOT NULL,\n                              Director VARCHAR NOT NULL,\n                              Actor VARCHAR NOT NULL);    \n                    '''</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"successfully\"</span><span class=\"token punctuation\">)</span>\n        target_suffix<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'json'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'xls'</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">if</span> read_type <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> target_suffix<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span>\n        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span><span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> read_type <span class=\"token operator\">==</span> <span class=\"token string\">'json'</span><span class=\"token punctuation\">:</span>\n                data<span class=\"token operator\">=</span>json<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">\"Scrape_detail\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> line<span class=\"token punctuation\">:</span>\n                        sql <span class=\"token operator\">=</span> <span class=\"token string\">\"insert into movie_detail(id,title,introduction,director,actor) values (null,'%s','%s','%s','%s')\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">[</span><span class=\"token string\">'introduction'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">[</span><span class=\"token string\">'director'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">[</span><span class=\"token string\">'actor'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                        conn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n                        conn<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">elif</span> read_type <span class=\"token operator\">==</span> <span class=\"token string\">'txt'</span><span class=\"token punctuation\">:</span>\n                data<span class=\"token operator\">=</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> data\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":0.73,"words":218},"y":"a","t":"爬虫数据获取至SQLite","i":"vue"},["/Blog/2022/Gra/CrawlBase","/Blog/2022/Gra/CrawlBase.md"]],
  ["v-74d7881c","/Blog/2022/Gra/Delay_Wait.html",{"a":"cava","d":"2023-01-07T23:36:21.000Z","l":"2023年1月8日","c":["notebook"],"g":["爬虫技术"],"u":false,"o":true,"e":"<h3> 延迟插件</h3>\n<p>使用目的：请求访问频繁，作非正常浏览判别会被封禁Ip</p>\n<div class=\"language-python line-numbers-mode\" data-ext=\"py\"><pre class=\"language-python\"><code><span class=\"token keyword\">from</span> urllib <span class=\"token keyword\">import</span> parse\n<span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> datetime\n<span class=\"token keyword\">import</span> time<span class=\"token punctuation\">,</span>requests  <span class=\"token comment\">#睡眠req爬虫库</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DelayWait</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>delay<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>delay<span class=\"token operator\">=</span>delay\n        self<span class=\"token punctuation\">.</span>urls<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#字典存储各种 url,域名：time</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">wait</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        netloc<span class=\"token operator\">=</span>parse<span class=\"token punctuation\">.</span>urlparse<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>netloc\n        <span class=\"token comment\">#1. 解析url,比较每次是否访问同一个主站，是同一个就用延迟插件，不是就不需要；因为只有短时间内访问同一个网站才会被封禁。</span>\n        lastOne<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>urls<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>netloc<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#? 使用dic[key] 没有key对应的值会返回KeyError;get返回None</span>\n        <span class=\"token keyword\">if</span> lastOne <span class=\"token keyword\">and</span> self<span class=\"token punctuation\">.</span>delay <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            timeWait<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>delay<span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>lastOne<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>seconds <span class=\"token comment\">#2. 当前时间和之前的域名(时间)作差,并转化成秒</span>\n            <span class=\"token keyword\">if</span> timeWait <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>timeWait<span class=\"token punctuation\">)</span> <span class=\"token comment\">#将差值时间作为休眠时间</span>\n        self<span class=\"token punctuation\">.</span>urls<span class=\"token punctuation\">[</span>netloc<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    urls<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"https://ssr1.scrape.center/\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span><span class=\"token number\">5</span>\n    d<span class=\"token operator\">=</span>DelayWait<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> url <span class=\"token keyword\">in</span> urls<span class=\"token punctuation\">:</span>\n        html<span class=\"token operator\">=</span>requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n        d<span class=\"token punctuation\">.</span>wait<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">.</span>status_code<span class=\"token punctuation\">)</span>\n\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":0.89,"words":268},"y":"a","t":"延迟插件","i":"vue"},["/Blog/2022/Gra/Delay_Wait","/Blog/2022/Gra/Delay_Wait.md"]],
  ["v-33daf4df","/Blog/2022/Gra/Template_graduate.html",{"a":"cava","d":"2022-10-30T12:04:21.000Z","l":"2022年10月30日","c":["notebook"],"g":["爬虫技术"],"u":false,"o":true,"n":true,"r":{"minutes":0.53,"words":160},"y":"a","t":"请求头定义模板","i":"vue"},["/Blog/2022/Gra/Template_graduate","/Blog/2022/Gra/Template_graduate.md"]],
  ["v-8681ccf8","/Blog/2022/Gra/Try_Exception.html",{"a":"cava","d":"2022-10-30T12:04:21.000Z","l":"2022年10月30日","c":["notebook"],"g":["python"],"u":false,"o":true,"e":"<h2> 异常捕获</h2>\n<h3> try........exception</h3>\n<p>1.一个try一个except ,except中可以捕获多种异常类型，try子句中若遇到执行有错误的语句1号，其余下的语句都将被忽略，捕获1号语句中的异常</p>\n<p>2.异常类型可以放在一个元组中</p>\n<p>3.非系统型异常可以用Except统一捕获</p>\n<p>4.finally中的语句表示，无论如何都是会被执行的</p>\n<div class=\"language-python line-numbers-mode\" data-ext=\"py\"><pre class=\"language-python\"><code><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        the_num<span class=\"token operator\">=</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"please enter here:\"</span><span class=\"token punctuation\">)</span>\n        num1<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>the_num<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        num2<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>the_num<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        the_result<span class=\"token operator\">=</span>num1<span class=\"token operator\">+</span>num2\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>the_result<span class=\"token punctuation\">)</span>\n        test <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"haha\"</span><span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">break</span>\n    <span class=\"token comment\">#写法1</span>\n    <span class=\"token comment\"># except ValueError as err:</span>\n    <span class=\"token comment\">#     print(\"Value Err is {}\".format(err))</span>\n    <span class=\"token comment\"># except TypeError as err:</span>\n    <span class=\"token comment\">#     print(\"Type Err is {}\".format(err))</span>\n    <span class=\"token comment\">#写法2</span>\n    <span class=\"token keyword\">except</span><span class=\"token punctuation\">(</span>ValueError<span class=\"token punctuation\">,</span>TypeError<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> err<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The Err is {}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># finally:</span>\n    <span class=\"token comment\">#     print(\"这里是无论是否异常，都将执行的内容\")</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"continue\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span>\n<span class=\"token comment\">#输出</span>\nplease enter here<span class=\"token punctuation\">:</span><span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">2</span>\n<span class=\"token number\">3</span>\nThe Err <span class=\"token keyword\">is</span> unhashable <span class=\"token builtin\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'list'</span>\nplease enter here<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span>\nplease enter here<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> ss\nThe Err <span class=\"token keyword\">is</span> invalid literal <span class=\"token keyword\">for</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">with</span> base <span class=\"token number\">10</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'ss'</span>\nplease enter here<span class=\"token punctuation\">:</span>\n<span class=\"token comment\">#因为TypeError的try子句顺序在ValueError之后，当ValueError执行捕获异常时，TypeError就不会被执行</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":1.04,"words":312},"y":"a","t":"异常捕获Try..exception","i":"vue"},["/Blog/2022/Gra/Try_Exception","/Blog/2022/Gra/Try_Exception.md"]],
  ["v-772d5e8e","/Blog/2022/Python_Automation/read_Excel.html",{"a":"cava","d":"2022-10-30T12:04:21.000Z","l":"2022年10月30日","c":["notebook","VuePress"],"g":["Vue","VuePress"],"u":false,"o":true,"e":"<h3> 读取excel</h3>\n<div class=\"language-python line-numbers-mode\" data-ext=\"py\"><pre class=\"language-python\"><code><span class=\"token comment\">#导入模块</span>\n<span class=\"token keyword\">import</span> xlrd<span class=\"token punctuation\">,</span>xlwt\n<span class=\"token comment\">#打开文件</span>\nwb <span class=\"token operator\">=</span> xlrd<span class=\"token punctuation\">.</span>open_workbook<span class=\"token punctuation\">(</span><span class=\"token string\">\"../school/cava.xls\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#获取全部的表</span>\nsheets<span class=\"token operator\">=</span>wb<span class=\"token punctuation\">.</span>sheets<span class=\"token punctuation\">(</span>\nwb<span class=\"token punctuation\">.</span>sheet_by_name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#获取所有的行和列</span>\nrows<span class=\"token operator\">=</span>sheets<span class=\"token punctuation\">.</span>nrows\ncols<span class=\"token operator\">=</span>sheets<span class=\"token punctuation\">.</span>ncols\n<span class=\"token comment\">#获取文件中的表格</span>\n<span class=\"token comment\">#1.通过索引</span>\nsheet <span class=\"token operator\">=</span> wb<span class=\"token punctuation\">.</span>sheet_by_index<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#2.通过表格名</span>\nsheet<span class=\"token operator\">=</span>wb<span class=\"token punctuation\">.</span>sheet_by_name<span class=\"token punctuation\">(</span><span class=\"token string\">\"marm\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#第一列所有的值</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>sheet<span class=\"token punctuation\">.</span>col_values<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#第一行所有的值</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>sheet<span class=\"token punctuation\">.</span>row_values<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#获取表格全部数据</span>\n<span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>rows<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">for</span> col <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>cols<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n \t\tvalue <span class=\"token operator\">=</span> sheet<span class=\"token punctuation\">.</span>cell_value<span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#调整格式，使得数据以在表格中的样式显示在打印台</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#例子:向表格第一行添加数据</span>\nhead_data<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'sex'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span>\npos<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n<span class=\"token keyword\">for</span> <span class=\"token keyword\">in</span> head_data<span class=\"token punctuation\">:</span>\n    sheet<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>pos<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span><span class=\"token comment\">#sheet.write(行，列，数据)</span>\n    pos<span class=\"token operator\">+=</span><span class=\"token number\">1</span>\nwb<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token string\">\"othername.xls\"</span><span class=\"token punctuation\">)</span> \n\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":2.39,"words":716},"y":"a","t":"python 自动化","i":"vue"},["/Blog/2022/Python_Automation/read_Excel","/Blog/2022/Python_Automation/read_Excel.md"]],
  ["v-1713edc2","/Blog/2022/Crawl/foundation/Beautiful.html",{"a":"cava","d":"2022-10-30T12:04:21.000Z","l":"2022年10月30日","c":["notebook"],"g":["爬虫技术","网页源代码解析方式"],"u":false,"o":true,"e":"<h2> Beautiful Soup</h2>\n<h3> 安装库,导入包</h3>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><pre class=\"language-text\"><code>pip install lxml\npip install BeautifulSoup\nfrom bs4 import BeautifulSoup\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":1.45,"words":434},"y":"a","t":"Beautiful Soup 解析","i":"vue"},["/Blog/2022/Crawl/foundation/Beautiful","/Blog/2022/Crawl/foundation/Beautiful.md"]],
  ["v-6499c3b0","/Blog/2022/Crawl/foundation/Book1.html",{"a":"cava","d":"2022-10-30T12:04:21.000Z","l":"2022年10月30日","c":["notebook"],"g":["爬虫技术","爬虫实战"],"u":false,"o":true,"e":"<h2> 百度新闻网站爬取</h2>\n<h3> 流程图</h3>\n\n<div class=\"language-python line-numbers-mode\" data-ext=\"py\"><pre class=\"language-python\"><code><span class=\"token keyword\">import</span> re<span class=\"token punctuation\">,</span>requests<span class=\"token punctuation\">,</span>tldextract<span class=\"token punctuation\">,</span>time\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">save_data</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s :%s\"</span> <span class=\"token operator\">%</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">crawler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\">#1.下载百度页面</span>\n    hub_url<span class=\"token operator\">=</span><span class=\"token string\">'https://news.baidu.com/'</span>\n    req<span class=\"token operator\">=</span>requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>hub_url<span class=\"token punctuation\">)</span>\n    html<span class=\"token operator\">=</span>req<span class=\"token punctuation\">.</span>text\n    <span class=\"token comment\"># print(html)</span>\n\n    <span class=\"token comment\">#2.获取新闻链接</span>\n    <span class=\"token comment\"># pattern='.*?&lt;link.*?href=\"(.*?)\".*?style=\"zoom.*?&gt;.*?id=\"ariaTipText\".*?href=\"\"'</span>\n    pattern<span class=\"token operator\">=</span><span class=\"token string\">r'href=[\\'\"]?(.*?)[\\'\"\\s]'</span>\n    news_links<span class=\"token operator\">=</span>re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>pattern<span class=\"token punctuation\">,</span>html<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># print(news_links)</span>\n\n    <span class=\"token comment\">#3.过滤链接</span>\n    links_lst<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> news_links<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> i<span class=\"token punctuation\">.</span>starswith<span class=\"token punctuation\">(</span><span class=\"token string\">'https'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">continue</span>\n        tld<span class=\"token operator\">=</span>tldextract<span class=\"token punctuation\">.</span>extract<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> tld<span class=\"token punctuation\">.</span>domain <span class=\"token operator\">==</span> <span class=\"token string\">'baidu'</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">continue</span>\n        links_lst<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> links_lst<span class=\"token punctuation\">:</span>\n        html<span class=\"token operator\">=</span>requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        crawler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    crawler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":1.24,"words":371},"y":"a","t":"百度新闻爬取","i":"vue"},["/Blog/2022/Crawl/foundation/Book1","/Blog/2022/Crawl/foundation/Book1.md"]],
  ["v-57b3f61e","/Blog/2022/Crawl/foundation/PyQuery.html",{"a":"cava","d":"2022-10-30T12:04:21.000Z","l":"2022年10月30日","c":["notebook"],"g":["爬虫技术","网页源代码解析方式"],"u":false,"o":true,"e":"<h2> PyQuery</h2>\n<h3> 1.1返回li标签</h3>\n<div class=\"language-python line-numbers-mode\" data-ext=\"py\"><pre class=\"language-python\"><code><span class=\"token keyword\">import</span>  pyquery<span class=\"token punctuation\">,</span>requests<span class=\"token punctuation\">,</span>os\n<span class=\"token keyword\">from</span> pyquery <span class=\"token keyword\">import</span> PyQuery <span class=\"token keyword\">as</span> pq\nhtml<span class=\"token operator\">=</span><span class=\"token triple-quoted-string string\">\"\"\" \n&lt;div class=\"wrap\"&gt;\n    &lt;div id=\"container\"&gt;\n        &lt;ul class=\"list\"&gt;\n            &lt;li class=\"item-0\"&gt;&lt;span&gt;sss&lt;/span&gt;first item&lt;/li&gt;\n            &lt;li class=\"item-1\"&gt;&lt;a href=\"link2,html\"&gt;second item&lt;/a&gt;&lt;/li&gt;\n            &lt;li class=\"item-0 active\"&gt;&lt;a href=\"link3.html\"&gt;&lt;span class=\"blod\"&gt;third item&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;\n            &lt;li class=\"item-1 active\"&gt;&lt;a href=\"link4.html\"&gt;fourth item&lt;/a&gt;&lt;/li&gt;\n            &lt;li class=\"item-0\"&gt;&lt;a href=\"link5.html\"&gt;fifth item&lt;/a&gt;&lt;/li&gt;\n            &lt;ol&gt;&lt;li class=\"item-100\"&gt;&lt;a href=\"link51.html\"&gt;100 item&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;\n        &lt;/ul&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\"\"\"</span>\n<span class=\"token comment\">#1.1返回所有li标签</span>\ndoc <span class=\"token operator\">=</span> pq<span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">(</span><span class=\"token string\">\"li\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span>输出\n<span class=\"token operator\">&lt;</span>li <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"item-0\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>span<span class=\"token operator\">&gt;</span>sss<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">&gt;</span>first item<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>li <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"item-1\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string\">\"link2,html\"</span><span class=\"token operator\">&gt;</span>second item<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>li <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"item-0 active\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string\">\"link3.html\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>span <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"blod\"</span><span class=\"token operator\">&gt;</span>third item<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>li <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"item-1 active\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string\">\"link4.html\"</span><span class=\"token operator\">&gt;</span>fourth item<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>li <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"item-0\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string\">\"link5.html\"</span><span class=\"token operator\">&gt;</span>fifth item<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>li <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"item-100\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string\">\"link51.html\"</span><span class=\"token operator\">&gt;</span><span class=\"token number\">100</span> item<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">&gt;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":5.72,"words":1715},"y":"a","t":"PyQuery 解析","i":"vue"},["/Blog/2022/Crawl/foundation/PyQuery","/Blog/2022/Crawl/foundation/PyQuery.md"]],
  ["v-1bc4bef6","/Blog/2022/Crawl/foundation/PythonCrawl.html",{"a":"cava","d":"2023-01-01T13:10:21.000Z","l":"2023年1月1日","c":["notebook"],"g":["爬虫技术"],"u":false,"o":true,"n":true,"r":{"minutes":15.89,"words":4768},"y":"a","t":"爬虫原理知识","i":"vue"},["/Blog/2022/Crawl/foundation/PythonCrawl","/Blog/2022/Crawl/foundation/PythonCrawl.md"]],
  ["v-20c79dc0","/Blog/2022/Crawl/foundation/regex-rule.html",{"a":"cava","d":"2022-10-30T12:04:21.000Z","l":"2022年10月30日","c":["notebook"],"g":["python","正则表达式","网页源代码解析方式"],"u":false,"o":true,"e":"<h2> 正则表达式</h2>\n<h3> 模式</h3>\n<table>\n<thead>\n<tr>\n<th>模式</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>\\w</code></td>\n<td>匹配字母数字及下划线</td>\n</tr>\n<tr>\n<td><code>\\W</code></td>\n<td>匹配非字母数字下划线</td>\n</tr>\n<tr>\n<td><code>\\s</code></td>\n<td>匹配任意空白字符，等价于 [\\t\\n\\r\\f].</td>\n</tr>\n<tr>\n<td><code>\\S</code></td>\n<td>匹配任意非空字符</td>\n</tr>\n<tr>\n<td><code>\\d</code></td>\n<td>匹配任意数字，等价于 [0-9]</td>\n</tr>\n<tr>\n<td><code>\\D</code></td>\n<td>匹配任意非数字</td>\n</tr>\n<tr>\n<td><code>\\A</code></td>\n<td>匹配字符串开始</td>\n</tr>\n<tr>\n<td><code>\\Z</code></td>\n<td>匹配字符串结束，如果是存在换行，只匹配到换行前的结束字符串</td>\n</tr>\n<tr>\n<td><code>\\z</code></td>\n<td>匹配字符串结束</td>\n</tr>\n<tr>\n<td><code>\\G</code></td>\n<td>匹配最后匹配完成的位置</td>\n</tr>\n<tr>\n<td><code>\\n</code></td>\n<td>匹配一个换行符</td>\n</tr>\n<tr>\n<td><code>\\t</code></td>\n<td>匹配一个制表符</td>\n</tr>\n<tr>\n<td><code>^</code></td>\n<td>匹配字符串的开头</td>\n</tr>\n<tr>\n<td><code>$</code></td>\n<td>匹配字符串的末尾。</td>\n</tr>\n<tr>\n<td><code>.</code></td>\n<td>匹配任意字符，除了换行符，当re.DOTALL标记被指定时，则可以匹配包括换行符的任意字符。</td>\n</tr>\n<tr>\n<td><code>[...]</code></td>\n<td>用来表示一组字符,单独列出：[amk] 匹配 'a'，'m'或'k'</td>\n</tr>\n<tr>\n<td><code>[^...]</code></td>\n<td>不在[]中的字符：[^abc] 匹配除了a,b,c之外的字符。</td>\n</tr>\n<tr>\n<td><code>*</code></td>\n<td>匹配0个或多个的表达式。</td>\n</tr>\n<tr>\n<td><code>+</code></td>\n<td>匹配1个或多个的表达式。</td>\n</tr>\n<tr>\n<td><code>?</code></td>\n<td>匹配0个或1个由前面的正则表达式定义的片段，非贪婪方式</td>\n</tr>\n<tr>\n<td><code>{n}</code></td>\n<td>精确匹配n个前面表达式。</td>\n</tr>\n<tr>\n<td><code>{n, m}</code></td>\n<td>匹配 n 到 m 次由前面的正则表达式定义的片段，贪婪方式</td>\n</tr>\n<tr>\n<td>`a</td>\n<td>b`</td>\n</tr>\n<tr>\n<td><code>()</code></td>\n<td>匹配括号内的表达式，也表示一个组</td>\n</tr>\n</tbody>\n</table>","r":{"minutes":150.94,"words":45282},"y":"a","t":"正则表达式","i":"vue"},["/Blog/2022/Crawl/foundation/regex-rule","/Blog/2022/Crawl/foundation/regex-rule.md"]],
  ["v-3706649a","/404.html",{"y":"p","t":""},["/404"]],
  ["v-0398ebc6","/Blog/2022/",{"y":"p","t":"2022"},["/Blog/2022/index.html"]],
  ["v-1297d554","/Blog/",{"y":"p","t":"Blog"},["/Blog/index.html"]],
  ["v-427c6536","/Blog/2022/Crawl/",{"y":"p","t":"Crawl"},["/Blog/2022/Crawl/index.html"]],
  ["v-bac3cbf6","/Blog/2022/MongoDB_/",{"y":"p","t":"Mongo D B"},["/Blog/2022/MongoDB_/index.html"]],
  ["v-471931d6","/Blog/2022/Gra/",{"y":"p","t":"Gra"},["/Blog/2022/Gra/index.html"]],
  ["v-f14b981c","/Blog/2022/Python_Automation/",{"y":"p","t":"Python Automation"},["/Blog/2022/Python_Automation/index.html"]],
  ["v-542ae357","/Blog/2022/Crawl/foundation/",{"y":"p","t":"Foundation"},["/Blog/2022/Crawl/foundation/index.html"]],
  ["v-5bc93818","/category/",{"y":"p","t":"分类","I":0},["/category/index.html"]],
  ["v-744d024e","/tag/",{"y":"p","t":"标签","I":0},["/tag/index.html"]],
  ["v-e52c881c","/article/",{"y":"p","t":"文章","I":0},["/article/index.html"]],
  ["v-154dc4c4","/star/",{"y":"p","t":"收藏","I":0},["/star/index.html"]],
  ["v-01560935","/timeline/",{"y":"p","t":"时间轴","I":0},["/timeline/index.html"]],
  ["v-3847fc9c","/category/notebook/",{"y":"p","t":"notebook 分类","I":0},["/category/notebook/index.html"]],
  ["v-b302da92","/tag/vue/",{"y":"p","t":"Vue 标签","I":0},["/tag/vue/index.html"]],
  ["v-43d7543a","/category/vuepress/",{"y":"p","t":"VuePress 分类","I":0},["/category/vuepress/index.html"]],
  ["v-ed16b278","/tag/vuepress/",{"y":"p","t":"VuePress 标签","I":0},["/tag/vuepress/index.html"]],
  ["v-42619dd5","/tag/%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/",{"y":"p","t":"爬虫技术 标签","I":0},["/tag/爬虫技术/","/tag/%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/index.html"]],
  ["v-c457ce30","/tag/%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF-%E7%8C%AB%E7%9C%BC%E7%94%B5%E5%BD%B1/",{"y":"p","t":"爬虫技术 猫眼电影 标签","I":0},["/tag/爬虫技术-猫眼电影/","/tag/%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF-%E7%8C%AB%E7%9C%BC%E7%94%B5%E5%BD%B1/index.html"]],
  ["v-794d224b","/tag/mongodb/",{"y":"p","t":"MongoDB 标签","I":0},["/tag/mongodb/index.html"]],
  ["v-5f4271f8","/tag/python-web%E6%A1%86%E6%9E%B6/",{"y":"p","t":"python Web框架 标签","I":0},["/tag/python-web框架/","/tag/python-web%E6%A1%86%E6%9E%B6/index.html"]],
  ["v-245f5676","/tag/python/",{"y":"p","t":"python 标签","I":0},["/tag/python/index.html"]],
  ["v-7e8edfe1","/tag/%E7%88%AC%E8%99%AB/",{"y":"p","t":"爬虫 标签","I":0},["/tag/爬虫/","/tag/%E7%88%AC%E8%99%AB/index.html"]],
  ["v-25365ef3","/tag/%E6%95%B0%E6%8D%AE%E5%BA%93/",{"y":"p","t":"数据库 标签","I":0},["/tag/数据库/","/tag/%E6%95%B0%E6%8D%AE%E5%BA%93/index.html"]],
  ["v-5282eb78","/tag/%E7%BD%91%E9%A1%B5%E6%BA%90%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%90%E6%96%B9%E5%BC%8F/",{"y":"p","t":"网页源代码解析方式 标签","I":0},["/tag/网页源代码解析方式/","/tag/%E7%BD%91%E9%A1%B5%E6%BA%90%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%90%E6%96%B9%E5%BC%8F/index.html"]],
  ["v-43ec122e","/tag/%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98/",{"y":"p","t":"爬虫实战 标签","I":0},["/tag/爬虫实战/","/tag/%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98/index.html"]],
  ["v-66f1a1a4","/tag/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/",{"y":"p","t":"正则表达式 标签","I":0},["/tag/正则表达式/","/tag/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/index.html"]],
]
