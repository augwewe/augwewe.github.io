import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as p,a as n,b as s,d as e}from"./app.4f5ea607.js";const o="/assets/image-20221119111440378.84fc9ed3.png",l={},c=n("h2",{id:"\u6B63\u5219\u8868\u8FBE\u5F0F",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6B63\u5219\u8868\u8FBE\u5F0F","aria-hidden":"true"},"#"),s(" \u6B63\u5219\u8868\u8FBE\u5F0F")],-1),i=n("h3",{id:"\u6A21\u5F0F",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6A21\u5F0F","aria-hidden":"true"},"#"),s(" \u6A21\u5F0F")],-1),u=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"\u6A21\u5F0F"),n("th",null,"\u63CF\u8FF0")])]),n("tbody",null,[n("tr",null,[n("td",null,"\\w"),n("td",null,"\u5339\u914D\u5B57\u6BCD\u6570\u5B57\u53CA\u4E0B\u5212\u7EBF")]),n("tr",null,[n("td",null,"\\W"),n("td",null,"\u5339\u914D\u975E\u5B57\u6BCD\u6570\u5B57\u4E0B\u5212\u7EBF")]),n("tr",null,[n("td",null,"\\s"),n("td",null,"\u5339\u914D\u4EFB\u610F\u7A7A\u767D\u5B57\u7B26\uFF0C\u7B49\u4EF7\u4E8E [\\t\\n\\r\\f].")]),n("tr",null,[n("td",null,"\\S"),n("td",null,"\u5339\u914D\u4EFB\u610F\u975E\u7A7A\u5B57\u7B26")]),n("tr",null,[n("td",null,"\\d"),n("td",null,"\u5339\u914D\u4EFB\u610F\u6570\u5B57\uFF0C\u7B49\u4EF7\u4E8E [0-9]")]),n("tr",null,[n("td",null,"\\D"),n("td",null,"\u5339\u914D\u4EFB\u610F\u975E\u6570\u5B57")]),n("tr",null,[n("td",null,"\\A"),n("td",null,"\u5339\u914D\u5B57\u7B26\u4E32\u5F00\u59CB")]),n("tr",null,[n("td",null,"\\Z"),n("td",null,"\u5339\u914D\u5B57\u7B26\u4E32\u7ED3\u675F\uFF0C\u5982\u679C\u662F\u5B58\u5728\u6362\u884C\uFF0C\u53EA\u5339\u914D\u5230\u6362\u884C\u524D\u7684\u7ED3\u675F\u5B57\u7B26\u4E32")]),n("tr",null,[n("td",null,"\\z"),n("td",null,"\u5339\u914D\u5B57\u7B26\u4E32\u7ED3\u675F")]),n("tr",null,[n("td",null,"\\G"),n("td",null,"\u5339\u914D\u6700\u540E\u5339\u914D\u5B8C\u6210\u7684\u4F4D\u7F6E")]),n("tr",null,[n("td",null,"\\n"),n("td",null,"\u5339\u914D\u4E00\u4E2A\u6362\u884C\u7B26")]),n("tr",null,[n("td",null,"\\t"),n("td",null,"\u5339\u914D\u4E00\u4E2A\u5236\u8868\u7B26")]),n("tr",null,[n("td",null,"^"),n("td",null,"\u5339\u914D\u5B57\u7B26\u4E32\u7684\u5F00\u5934")]),n("tr",null,[n("td",null,"$"),n("td",null,"\u5339\u914D\u5B57\u7B26\u4E32\u7684\u672B\u5C3E\u3002")]),n("tr",null,[n("td",null,"."),n("td",null,"\u5339\u914D\u4EFB\u610F\u5B57\u7B26\uFF0C\u9664\u4E86\u6362\u884C\u7B26\uFF0C\u5F53re.DOTALL\u6807\u8BB0\u88AB\u6307\u5B9A\u65F6\uFF0C\u5219\u53EF\u4EE5\u5339\u914D\u5305\u62EC\u6362\u884C\u7B26\u7684\u4EFB\u610F\u5B57\u7B26\u3002")]),n("tr",null,[n("td",null,"[...]"),n("td",null,"\u7528\u6765\u8868\u793A\u4E00\u7EC4\u5B57\u7B26,\u5355\u72EC\u5217\u51FA\uFF1A[amk] \u5339\u914D 'a'\uFF0C'm'\u6216'k'")]),n("tr",null,[n("td",null,"[^...]"),n("td",null,"\u4E0D\u5728[]\u4E2D\u7684\u5B57\u7B26\uFF1A[^abc] \u5339\u914D\u9664\u4E86a,b,c\u4E4B\u5916\u7684\u5B57\u7B26\u3002")]),n("tr",null,[n("td",null,"*"),n("td",null,"\u5339\u914D0\u4E2A\u6216\u591A\u4E2A\u7684\u8868\u8FBE\u5F0F\u3002")]),n("tr",null,[n("td",null,"+"),n("td",null,"\u5339\u914D1\u4E2A\u6216\u591A\u4E2A\u7684\u8868\u8FBE\u5F0F\u3002")]),n("tr",null,[n("td",null,"?"),n("td",null,"\u5339\u914D0\u4E2A\u62161\u4E2A\u7531\u524D\u9762\u7684\u6B63\u5219\u8868\u8FBE\u5F0F\u5B9A\u4E49\u7684\u7247\u6BB5\uFF0C\u975E\u8D2A\u5A6A\u65B9\u5F0F")]),n("tr",null,[n("td",{n:""}),n("td",null,"\u7CBE\u786E\u5339\u914Dn\u4E2A\u524D\u9762\u8868\u8FBE\u5F0F\u3002")]),n("tr",null,[n("td",{"n,":"",m:""}),n("td",null,"\u5339\u914D n \u5230 m \u6B21\u7531\u524D\u9762\u7684\u6B63\u5219\u8868\u8FBE\u5F0F\u5B9A\u4E49\u7684\u7247\u6BB5\uFF0C\u8D2A\u5A6A\u65B9\u5F0F")]),n("tr",null,[n("td",null,"a|b"),n("td",null,"\u5339\u914Da\u6216b")]),n("tr",null,[n("td",null,"( )"),n("td",null,"\u5339\u914D\u62EC\u53F7\u5185\u7684\u8868\u8FBE\u5F0F\uFF0C\u4E5F\u8868\u793A\u4E00\u4E2A\u7EC4")])])],-1),r=e(`<h3 id="\u5E38\u89C4\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#\u5E38\u89C4\u5339\u914D" aria-hidden="true">#</a> \u5E38\u89C4\u5339\u914D</h3><h3 id="atttention" tabindex="-1"><a class="header-anchor" href="#atttention" aria-hidden="true">#</a> atttention:</h3><p>re.match(pattern,string,flag=0)</p><p>\u4ECE\u5B57\u7B26\u7684\u8D77\u59CB\u4F4D\u7F6E\u5339\u914D\u4E00\u4E2A\u6A21\u5F0F\uFF0C\u5982\u679C\u4E0D\u662F\u8D77\u59CB\u4F4D\u7F6E\u5339\u914D\u6210\u529F,match()\u8FD4\u56DEnone</p><p>\\w\u53EA\u80FD\u5339\u914D\u5230\u4E00\u4E2A\u6570\u5B57/\u5B57\u6BCD</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> re
content<span class="token operator">=</span><span class="token string">&quot;Hello 123 4567 Word_This is a Regex Demo&quot;</span>
pattern<span class="token operator">=</span><span class="token string">&quot;^Hello\\s\\d\\d\\d\\s\\d{4}\\s\\w+\\s.*Demo$&quot;</span>
result<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>content<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#\u83B7\u53D6\u5230\u5339\u914D\u7684\u5BF9\u8C61</span>
<span class="token comment">#\u8F93\u51FA</span>
<span class="token operator">&lt;</span>re<span class="token punctuation">.</span>Match <span class="token builtin">object</span><span class="token punctuation">;</span> span<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">match</span><span class="token operator">=</span><span class="token string">&#39;Hello 123 4567 Word_This is a Regex Demo&#39;</span><span class="token operator">&gt;</span>
Hello <span class="token number">123</span> <span class="token number">4567</span> Word_This <span class="token keyword">is</span> a Regex Demo
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>
content <span class="token operator">=</span> <span class="token string">&quot;Ethanol, Ethyl Alcohol Absolute 200 1L&quot;</span>
pattern<span class="token operator">=</span><span class="token string">&quot;^Ethanol\\S\\s\\w+\\s.*1L$&quot;</span>
result<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>content<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6CDB\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#\u6CDB\u5339\u914D" aria-hidden="true">#</a> \u6CDB\u5339\u914D</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>content<span class="token operator">=</span><span class="token string">&quot;Hello 123 4567 Word_This is a Regex Demo&quot;</span>
pattern<span class="token operator">=</span><span class="token string">&quot;^H.*o$&quot;</span><span class="token comment">#&quot;^H.+o$&quot;</span>
result<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>content<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5339\u914D\u7279\u5B9A\u76EE\u6807" tabindex="-1"><a class="header-anchor" href="#\u5339\u914D\u7279\u5B9A\u76EE\u6807" aria-hidden="true">#</a> \u5339\u914D\u7279\u5B9A\u76EE\u6807</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>content<span class="token operator">=</span><span class="token string">&quot;Hello 123 4567 Word_This is a Regex Demo&quot;</span>
pattern<span class="token operator">=</span><span class="token string">&quot;^H.*\\s(\\d{3})\\s.*Demo$&quot;</span><span class="token comment">#</span>
result<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>content<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#1,2\u83B7\u53D6\u4E24\u4E2A\u5185\u5BB9</span>
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>
a <span class="token operator">=</span> <span class="token string">&quot;Beakers, Plastic, Polypropylene, 2000mL&quot;</span>
pattern<span class="token operator">=</span><span class="token string">&quot;^Beakers\\S\\s(\\w+)\\S\\s\\w+\\S\\s(\\w+)$&quot;</span>
result<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>a<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>
content<span class="token operator">=</span><span class="token string">&quot;Filter, Vacuum System, PES Membrane, 0.2&quot;</span>
pattern<span class="token operator">=</span><span class="token string">&quot;^Filter\\S\\s(\\w{5})\\w+\\s\\w+\\S\\s(\\w+)\\s\\w+\\S\\s(\\d\\S\\d)$&quot;</span>
result<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>content<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8D2A\u5A6A\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#\u8D2A\u5A6A\u5339\u914D" aria-hidden="true">#</a> \u8D2A\u5A6A\u5339\u914D</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>content<span class="token operator">=</span><span class="token string">&quot;Hello 123 4567 Word_This is a Regex Demo&quot;</span>
pattern<span class="token operator">=</span><span class="token string">&quot;^H.*(\\d{3})\\s.*Demo$&quot;</span>  <span class="token comment">#\u8F93\u51FA567</span>
<span class="token comment">#\\d+\u4F1A\u8F93\u51FA7,\u81F3\u5C11\u4FDD\u7559\u4E00\u4E2A\uFF1B\\d* \u6CA1\u6709\u8F93\u51FA</span>
<span class="token comment">#*\u63A7\u5236\u8F93\u51FA\u6570\u5B57\uFF0C</span>

result<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>content<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6362\u884C\u8F93\u51FA" tabindex="-1"><a class="header-anchor" href="#\u6362\u884C\u8F93\u51FA" aria-hidden="true">#</a> \u6362\u884C\u8F93\u51FA</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>content<span class="token operator">=</span><span class="token triple-quoted-string string">&#39;&#39;&#39;Hello 1234567 Word_This
is a Regex Demo
&#39;&#39;&#39;</span>
pattern<span class="token operator">=</span><span class="token string">&quot;^h.*\\s(\\d+)\\s.*Demo$&quot;</span><span class="token comment">#</span>
result<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>content<span class="token punctuation">,</span>re<span class="token punctuation">.</span>S<span class="token operator">|</span>re<span class="token punctuation">.</span>I<span class="token punctuation">)</span><span class="token comment">#re.S\u53EF\u4EE5\u5339\u914D\u5230\u6362\u884C,\u82E5\u5F00\u59CB\u5B57\u6BCD\u662F\u5C0F\u5199\uFF0C\u4E14\u6CA1\u6709\u52A0re.I,\u5C31\u4E0D\u4F1A\u6709\u8F93\u51FA\uFF0Cre.S\u662F\u5FFD\u7565\u5927\u5C0F\u5199\uFF08\u4E0D\u8BBA\u5F00\u59CB\u5B57\u6BCD\u662F\u5927\u5199\u6216\u5C0F\u5199\u90FD\u53EF\u4EE5\u8F93\u51FA\uFF09</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="groups-\u8FD4\u56DE\u6240\u6709" tabindex="-1"><a class="header-anchor" href="#groups-\u8FD4\u56DE\u6240\u6709" aria-hidden="true">#</a> groups()\u8FD4\u56DE\u6240\u6709</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment">#groups()\u8FD4\u56DE\u5143\u7EC4</span>
content<span class="token operator">=</span><span class="token string">&quot;Hello 123 4567 Word_This is a Regex Demo&quot;</span>
pattern<span class="token operator">=</span><span class="token string">&quot;^H.*\\s(\\d+)\\s.*Demo$&quot;</span><span class="token comment">#</span>
result<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>content<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>groups<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8F6C\u4E49-\u539F\u6837\u8F93\u51FA\u7279\u6B8A\u7B26\u53F7" tabindex="-1"><a class="header-anchor" href="#\u8F6C\u4E49-\u539F\u6837\u8F93\u51FA\u7279\u6B8A\u7B26\u53F7" aria-hidden="true">#</a> \u8F6C\u4E49 - \u539F\u6837\u8F93\u51FA\u7279\u6B8A\u7B26\u53F7</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment">#\u8F6C\u4E49</span>
<span class="token keyword">import</span>  re
content<span class="token operator">=</span><span class="token string">&quot;hello$6.66&quot;</span>
result<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span><span class="token string">&quot;hello\\$6.66&quot;</span><span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token comment">#$\u9ED8\u8BA4\u7ED3\u675F\uFF0C\u52A0\u4E0A\\\u8F6C\u4E49\u540E\u539F\u6837\u8F93\u51FA,.\u539F\u6837\u8F93\u51FA\u4E5F\u9700\u8981\u8F6C\u4E49</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="search\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#search\u65B9\u6CD5" aria-hidden="true">#</a> search\u65B9\u6CD5</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment">#search\u65B9\u6CD5,\u4E0D\u4F1A\u56E0\u539F\u5B57\u7B26\u5F00\u5934\u548C\u7ED3\u5C3E\u4E0D\u7B26\u5408\u5339\u914D\u800C\u5F71\u54CD\u5230\u7ED3\u679C</span>
content<span class="token operator">=</span><span class="token triple-quoted-string string">&#39;&#39;&#39;Hello 1234567 Word_This
is a Regex Demo
&#39;&#39;&#39;</span>
pattern<span class="token operator">=</span><span class="token string">&quot;^h.*\\s(\\d+)\\s.*Demo$&quot;</span><span class="token comment">#</span>
result<span class="token operator">=</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>content<span class="token punctuation">,</span>re<span class="token punctuation">.</span>S<span class="token operator">|</span>re<span class="token punctuation">.</span>I<span class="token punctuation">)</span><span class="token comment">#re.S\u53EF\u4EE5\u5339\u914D\u5230\u6362\u884C,\u82E5\u5F00\u59CB\u5B57\u6BCD\u662F\u5C0F\u5199\uFF0C\u4E14\u6CA1\u6709\u52A0re.I,\u5C31\u4E0D\u4F1A\u6709\u8F93\u51FA\uFF0Cre.S\u662F\u5FFD\u7565\u5927\u5C0F\u5199\uFF08\u4E0D\u8BBA\u5F00\u59CB\u5B57\u6BCD\u662F\u5927\u5199\u6216\u5C0F\u5199\u90FD\u53EF\u4EE5\u8F93\u51FA\uFF09</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token comment">#\u6700\u597D\u4E0D\u8981\u52A0^ $\u5F00\u59CB\u548C\u7ED3\u675F\u7B26\u53F7</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>content<span class="token operator">=</span><span class="token string">&quot;Extra strings Hello 1234567 Word_This is a 666 Regex Demo Extra strings&quot;</span>
pattern<span class="token operator">=</span><span class="token string">&quot;\\d+&quot;</span>
result<span class="token operator">=</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>content<span class="token punctuation">)</span>
<span class="token comment"># result=re.search(pattern,content)\u8F93\u51FA1234567</span>
<span class="token comment"># result=re.match(pattern,content)#None</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sub\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#sub\u65B9\u6CD5" aria-hidden="true">#</a> sub\u65B9\u6CD5</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment">#sub\uFF0C\u66FF\u6362\u6240\u6709\u7B26\u5408\u6761\u4EF6\u7684 \u30022.\u5C06\u5339\u914D\u7684\u6761\u4EF6\u7528\u62EC\u53F7\u5F15\u7528\uFF0Cr&#39;1\\\u52A0\u4E0A\u6DFB\u52A0\u7684\u5185\u5BB9&#39;,</span>
content<span class="token operator">=</span><span class="token string">&quot;Hello 1234567 Word_This is a Regex Demo&quot;</span>
content<span class="token operator">=</span>re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">&quot;(\\d+)&quot;</span><span class="token punctuation">,</span><span class="token string">r&quot;\\1 666&quot;</span><span class="token punctuation">,</span>content<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6B63\u5219\u8868\u8FBE\u5F0F\u5C0F\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#\u6B63\u5219\u8868\u8FBE\u5F0F\u5C0F\u6D4B\u8BD5" aria-hidden="true">#</a> \u6B63\u5219\u8868\u8FBE\u5F0F\u5C0F\u6D4B\u8BD5</h3><p>\u63D0\u53D6\u4E2D\u6587</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> re
s<span class="token operator">=</span><span class="token triple-quoted-string string">&#39;&#39;&#39;&lt;!DOCTYPE html&gt; 
&lt;html&gt;   
&lt;head&gt;         
&lt;title&gt;\u5F90\u6E05\u98CE&lt;/title&gt;   
&lt;head&gt;   
&lt;body&gt;         
   &lt;h2&gt;               
     &lt;a&gt;\u5FAE\u4FE1\u516C\u4F17\u53F7:           
     &lt;em&gt;\u8F6C\u884C\u5B66\u6570\u636E\u5206\u6790&lt;/em&gt;           
     &lt;/a&gt;         
   &lt;/h2&gt;   
&lt;/body&gt; 
&lt;/html&gt;&#39;&#39;&#39;</span>
pattern<span class="token operator">=</span><span class="token string">&quot;&lt;html&gt;.*?&lt;title&gt;(.*?)&lt;/title&gt;.*?(?:\\s+)?(?:&lt;a&gt;)(.*?):(?:\\s+)(?:&lt;em&gt;)(.*?)&lt;/em&gt;&quot;</span>
n<span class="token operator">=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>s<span class="token punctuation">,</span>re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>
<span class="token comment">#\u8F93\u51FA[(&#39;\u5F90\u6E05\u98CE&#39;, &#39;\u5FAE\u4FE1\u516C\u4F17\u53F7&#39;, &#39;\u8F6C\u884C\u5B66\u6570\u636E\u5206\u6790&#39;)]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63D0\u53D6URL</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>s1<span class="token operator">=</span><span class="token string">&#39;&lt;link rel=&quot;search&quot; href=&quot;https://www.baidu.com&quot;/&gt; &#39;</span>
pattern1<span class="token operator">=</span><span class="token string">&#39;&lt;link.*?href=&quot;(.*?)&quot;/&gt;&#39;</span>
k<span class="token operator">=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern1<span class="token punctuation">,</span>s1<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span>
<span class="token comment">#\u8F93\u51FA [&#39;https://www.baidu.com&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63D0\u53D6\u6807\u7B7E\u540D</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>s2<span class="token operator">=</span><span class="token string">&quot;&lt;groupId&gt;QDReader.QDAarCenter&lt;/groupId&gt;&quot;</span>
pattern2<span class="token operator">=</span><span class="token string">&quot;(&lt;.*?&gt;)\\S+(&lt;/.*?&gt;)&quot;</span>
k1<span class="token operator">=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern2<span class="token punctuation">,</span>s2<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>k1<span class="token punctuation">)</span>
<span class="token comment">#\u8F93\u51FA [(&#39;&lt;groupId&gt;&#39;, &#39;&lt;/groupId&gt;&#39;)]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="excel\u6570\u636E\u6E05\u6D17\u5C0F\u6848\u4F8B" tabindex="-1"><a class="header-anchor" href="#excel\u6570\u636E\u6E05\u6D17\u5C0F\u6848\u4F8B" aria-hidden="true">#</a> excel\u6570\u636E\u6E05\u6D17\u5C0F\u6848\u4F8B</h3><p>\u89C4\u8303\u6B63\u5219\u8868\u8FBE\u5F0F</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> re

<span class="token comment"># Detergent, Triton X-100, Emprove, 1 L</span>
<span class="token comment"># Ethanol, Ethyl Alcohol Absolute 200 1L</span>
<span class="token comment"># 4L Ethyl Alcohol Pure 200 Proof USP</span>
<span class="token comment"># CIP 100, 1 gallon</span>
<span class="token comment"># Bag, 50mL Labtainer BioProcess w/ Luer L</span>


n1<span class="token operator">=</span><span class="token string">&quot;Detergent, Triton X-100, Emprove, 1 L&quot;</span>
regex1<span class="token operator">=</span>n1<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span><span class="token string">&quot;&amp;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span>
pattern1<span class="token operator">=</span><span class="token string">&quot;.*?(\\d+(?:&amp;)?(GALLON|L|KG|ML|UL))&quot;</span><span class="token comment">#gallon\u653E\u5728\u6700\u524D\u9762\uFF0C\u5426\u5219\u5339\u914D\u5230g\u5C31\u4E0D\u4F1A\u68C0\u6D4B\u5230gallon</span>
result1<span class="token operator">=</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>pattern1<span class="token punctuation">,</span>regex1<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result1<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

n2<span class="token operator">=</span><span class="token string">&quot;Ethanol, Ethyl Alcohol Absolute 200 1L&quot;</span>
regex2<span class="token operator">=</span>n2<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span><span class="token string">&quot;&amp;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span>
pattern2<span class="token operator">=</span><span class="token string">&quot;.*?(\\d+(GALLON|L|KG|ML|UL))&quot;</span><span class="token comment">#|\u4EE3\u8868\u6216\uFF0C\u603B\u7ED3\u53EF\u80FD\u5305\u542B\u7684\u5355\u4F4D</span>
result2<span class="token operator">=</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>pattern2<span class="token punctuation">,</span>regex2<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result2<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

n3<span class="token operator">=</span><span class="token string">&quot;4L Ethyl Alcohol Pure 200 Proof USP&quot;</span>
regex3<span class="token operator">=</span>n3<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span><span class="token string">&quot;&amp;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span>
pattern3<span class="token operator">=</span><span class="token string">&quot;.*?(\\d+(GALLON|L|KG|ML|UL))&quot;</span>
result3<span class="token operator">=</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>pattern3<span class="token punctuation">,</span>regex3<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result3<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

n4<span class="token operator">=</span><span class="token string">&quot;CIP 100, 1 gallon&quot;</span>
regex4<span class="token operator">=</span>n4<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span><span class="token string">&quot;&amp;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span>
pattern4<span class="token operator">=</span><span class="token string">&quot;.*?(\\d+(?:&amp;)?(GALLON|L|KG|ML|UL))&quot;</span>
result4<span class="token operator">=</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>pattern4<span class="token punctuation">,</span>regex4<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result4<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

n5<span class="token operator">=</span><span class="token string">&quot;Bag, 50mL Labtainer BioProcess w/ Luer L&quot;</span>
regex5<span class="token operator">=</span>n5<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span><span class="token string">&quot;&amp;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span>
pattern5<span class="token operator">=</span><span class="token string">&quot;.*?(\\d+(GALLON|L|KG|ML|UL))&quot;</span>
result5<span class="token operator">=</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>pattern5<span class="token punctuation">,</span>regex5<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result5<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

regex_list<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;.*?(\\d+(?:&amp;)?(GALLON|L|KG|ML|UL))&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;.*?(\\d+(GALLON|L|KG|ML|UL))&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;.*?(\\d+(GALLON|L|KG|ML|UL))&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;.*?(\\d+(?:&amp;)?(GALLON|L|KG|ML|UL))&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;.*?(\\d+(GALLON|L|KG|ML|UL))&quot;</span>
            <span class="token punctuation">]</span>
new_regex<span class="token operator">=</span><span class="token builtin">set</span><span class="token punctuation">(</span>regex_list<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>new_regex<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> xlrd<span class="token punctuation">,</span>xlwt<span class="token punctuation">,</span>re

wb<span class="token operator">=</span>xlrd<span class="token punctuation">.</span>open_workbook<span class="token punctuation">(</span><span class="token string">&quot;MARA.xls&quot;</span><span class="token punctuation">)</span>
sheet <span class="token operator">=</span>wb<span class="token punctuation">.</span>sheet_by_name<span class="token punctuation">(</span><span class="token string">&quot;marm&quot;</span><span class="token punctuation">)</span>
regex_list <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string">&#39;.*?(?:,)?(\\d+?(\\.\\d+)?(%)?(GALLON|L|KG|ML|G))&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;.*?(\\d+?(\\.\\d+)?(%)?(GALLON|L|KG|ML|G))&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;(\\d+?(\\.\\d+)?(%)?(GALLON|L|KG|ML|G)).*?&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;.*?(\\d+?(\\.\\d+)?(%)?(GALLON|L|KG|ML|G))&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;.*?(\\d+?(\\.\\d+)?(GALLON|L|KG|ML|G))&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>

M_data<span class="token operator">=</span>sheet<span class="token punctuation">.</span>col_values<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token comment">#\u5E8F\u53F7</span>
D_data<span class="token operator">=</span>sheet<span class="token punctuation">.</span>col_values<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token comment">#\u6DF7\u4E71\u7684description</span>
data_dict<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">#\u5C06\u5E8F\u53F7\u548Cdescription\u53D8\u6210\u4E00\u4E00\u5BF9\u5E94\u7684\u5B57\u5178</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>M_data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    data_dict<span class="token punctuation">[</span>M_data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">=</span>D_data<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
<span class="token comment"># print(data_dict)</span>
the_metrial<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
the_descripition<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> key<span class="token punctuation">,</span>value <span class="token keyword">in</span> data_dict<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> regex_list<span class="token punctuation">:</span>
        test<span class="token operator">=</span>value<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span><span class="token string">&quot;%&quot;</span><span class="token punctuation">)</span>
        result<span class="token operator">=</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>i<span class="token punctuation">,</span>test<span class="token punctuation">)</span>
        <span class="token keyword">if</span> result<span class="token punctuation">:</span>
            the_metrial<span class="token punctuation">.</span>append<span class="token punctuation">(</span>key<span class="token punctuation">)</span>
            the_descripition<span class="token punctuation">.</span>append<span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">break</span>
<span class="token comment">#\u6253\u5370\u6D4B\u8BD5\u67E5\u770B\u4FDD\u5B58\u7684\u662F\u5426\u662F\u7B26\u5408\u6B63\u5219\u8868\u8FBE\u5F0F\u7684key\u503C</span>
<span class="token comment"># print(the_descripition)</span>
<span class="token comment"># print(the_metrial)</span>
clean_description<span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">(</span>the_descripition<span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;%&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># print(type(clean_description))</span>
<span class="token comment">#\u6574\u7406\u5B8C\u6BD5\uFF0C\u65B0\u5EFA\u8868\u683C\u5B58\u5165\u6570\u636E</span>
wb2<span class="token operator">=</span>xlwt<span class="token punctuation">.</span>Workbook<span class="token punctuation">(</span><span class="token punctuation">)</span>
sheet2<span class="token operator">=</span>wb2<span class="token punctuation">.</span>add_sheet<span class="token punctuation">(</span><span class="token string">&quot;marm&quot;</span><span class="token punctuation">)</span>
head_data<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;Material&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Description&quot;</span><span class="token punctuation">]</span>
the_pos<span class="token operator">=</span><span class="token number">0</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> head_data<span class="token punctuation">:</span>
    sheet2<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>the_pos<span class="token punctuation">,</span>i<span class="token punctuation">)</span>
    the_pos<span class="token operator">+=</span><span class="token number">1</span>
the_index<span class="token operator">=</span><span class="token number">1</span>
<span class="token keyword">for</span> r <span class="token keyword">in</span> the_metrial<span class="token punctuation">:</span>
    sheet2<span class="token punctuation">.</span>write<span class="token punctuation">(</span>the_index<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>r<span class="token punctuation">)</span>
    the_index<span class="token operator">+=</span><span class="token number">1</span>
the_count<span class="token operator">=</span><span class="token number">1</span>
<span class="token keyword">for</span> k <span class="token keyword">in</span>  <span class="token builtin">eval</span><span class="token punctuation">(</span>clean_description<span class="token punctuation">)</span><span class="token punctuation">:</span>
    sheet2<span class="token punctuation">.</span>write<span class="token punctuation">(</span>the_count<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>k<span class="token punctuation">)</span>
    the_count<span class="token operator">+=</span><span class="token number">1</span>
wb2<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">&quot;Result_Mara.xls&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\uFF1A</p><img src="`+o+'" alt="image-20221119111440378" style="zoom:67%;">',36),k=[c,i,u,r];function d(v,m){return t(),p("div",null,k)}const h=a(l,[["render",d],["__file","rule.html.vue"]]);export{h as default};
