import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,d as t}from"./app.8220f81c.js";const p={},e=t(`<p>\u732B\u773CTop100\u699C\u7F51\u9875\u5206\u6790--\u8FDB\u9636\uFF1A\u4F18\u5316\u4EE3\u7801\uFF1B\u89E3\u6790\u7F51\u9875\u64CD\u4F5C;\u65B0\u589E\u5185\u5BB9\uFF1A\u4FDD\u5B58\u89E3\u6790\u5185\u5BB9\u4E3Ajson\u683C\u5F0F</p><h3 id="_1-\u89E3\u6790url\u5185\u5BB9\u4F18\u5316" tabindex="-1"><a class="header-anchor" href="#_1-\u89E3\u6790url\u5185\u5BB9\u4F18\u5316" aria-hidden="true">#</a> 1.\u89E3\u6790url\u5185\u5BB9\u4F18\u5316</h3><p>\u5C06\u89E3\u6790\u540E\u7684\u7F51\u9875\u6570\u636E\u4FDD\u5B58\u4E3A\u5B57\u5178\u683C\u5F0F\uFF0C\u81EA\u5B9A\u4E49\u6570\u636E\u6807\u7B7E\u4E3Akey\uFF0C\u5185\u5BB9\u4E3Avalue</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># print(content)</span>
        k_clean <span class="token operator">=</span> re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">&#39;&lt;/i&gt;&lt;i class=&quot;fraction&quot;&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token comment">#\u5148\u66FF\u6362\uFF0C\u65B9\u4FBF\u63D0\u53D6\u8BC4\u5206\u6570\u636E</span>
        pattern<span class="token operator">=</span><span class="token string">&#39;&lt;dd&gt;(?:\\s+)&lt;i class=.*?&lt;/i&gt;(?:\\s+)&lt;a href=&quot;(.*?)&quot;.*?title=&quot;(.*?)&quot;.*?&gt;(?:\\s+)&lt;img src.*?/&gt;(?:\\s+)&lt;img data-src=&quot;(.*?)&quot;.*?/&gt;&#39;</span> \\
                <span class="token string">&#39;*\\s?.*?&lt;p class=&quot;releasetime&quot;&gt;(.*?)&lt;/p&gt;.*?&lt;/div&gt;(?:\\s+).*?(?:\\s+)&lt;p class=&quot;score&quot;.*?&quot;integer&quot;&gt;(\\d\\.\\d).*?&lt;/p&gt;&#39;</span>
        data_lst<span class="token operator">=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>k_clean<span class="token punctuation">,</span>re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>
        <span class="token comment"># print(data_lst)#\u5B58\u653E\u94FE\u63A5\u4FE1\u606F\u7684\u5217\u8868\uFF0C\u5217\u8868\u5143\u7D20\u662F\u5143\u7EC4\uFF1A\u7535\u5F71\u540D\u79F0\uFF0C\u7535\u5F71\u5C01\u9762\uFF0C\u4E0A\u6620\u65E5\u671F\uFF0C\u8BC4\u5206</span>
        <span class="token comment"># print(k_clean)</span>
        good_lst<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">if</span> data_lst<span class="token punctuation">:</span>
            <span class="token keyword">for</span> tup <span class="token keyword">in</span> data_lst<span class="token punctuation">:</span>
                d<span class="token operator">=</span><span class="token punctuation">{</span>
                    <span class="token string">&quot;link&quot;</span><span class="token punctuation">:</span>urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urljoin<span class="token punctuation">(</span>self<span class="token punctuation">.</span>BASE_URL<span class="token punctuation">,</span> tup<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token string">&quot;title&quot;</span><span class="token punctuation">:</span>tup<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    <span class="token string">&quot;img&quot;</span><span class="token punctuation">:</span>tup<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    <span class="token string">&quot;relesstime&quot;</span><span class="token punctuation">:</span>tup<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    <span class="token string">&quot;score&quot;</span><span class="token punctuation">:</span>tup<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>
                <span class="token punctuation">}</span>
                good_lst<span class="token punctuation">.</span>append<span class="token punctuation">(</span>d<span class="token punctuation">)</span>
        <span class="token keyword">return</span>  good_lst
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u5C06\u89E3\u6790\u540E\u7684url\u5185\u5BB9\u5B58\u50A8\u4E3Ajson\u683C\u5F0F" tabindex="-1"><a class="header-anchor" href="#_2-\u5C06\u89E3\u6790\u540E\u7684url\u5185\u5BB9\u5B58\u50A8\u4E3Ajson\u683C\u5F0F" aria-hidden="true">#</a> 2.\u5C06\u89E3\u6790\u540E\u7684url\u5185\u5BB9\u5B58\u50A8\u4E3AJSON\u683C\u5F0F</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">save_json</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>content_dict<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;TopData&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;w&quot;</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        json<span class="token punctuation">.</span>dump<span class="token punctuation">(</span>content_dict<span class="token punctuation">,</span>f<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u8FD0\u884C\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#_3-\u8FD0\u884C\u89E3\u6790" aria-hidden="true">#</a> 3.\u8FD0\u884C\u89E3\u6790</h3><p>\u5C06top\u699C10\u4E2A\u9875\u9762\u7684\u5185\u5BB9\u90FD\u5B9A\u4E49\u4E3Ajson\u683C\u5F0F\uFF0C\u5B9A\u4E49json\u6587\u4EF6\u7684\u540D\u79F0</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">run_parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>folder<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment">#\u8FDB\u884C\u6392\u5E8F</span>
        JSON_TXT<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;MaoYanTop100&quot;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span>
        <span class="token comment"># result_list=[]</span>
        <span class="token keyword">for</span> path <span class="token keyword">in</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>generate_path<span class="token punctuation">(</span>folder<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            html_content <span class="token operator">=</span> self<span class="token punctuation">.</span>read_html<span class="token punctuation">(</span>path<span class="token punctuation">)</span>
            n<span class="token operator">=</span>self<span class="token punctuation">.</span>parse<span class="token punctuation">(</span>html_content<span class="token punctuation">)</span>
            <span class="token comment"># print(list(n))</span>
            JSON_TXT<span class="token punctuation">[</span><span class="token string">&quot;MaoYanTop100&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>save_json<span class="token punctuation">(</span>JSON_TXT<span class="token punctuation">)</span>
        pprint<span class="token punctuation">(</span>JSON_TXT<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-\u5B8C\u6574\u4EE3\u7801-\u8FDB\u5EA6\u81F3\u4FDD\u5B58\u4E3Ajson\u683C\u5F0F" tabindex="-1"><a class="header-anchor" href="#_4-\u5B8C\u6574\u4EE3\u7801-\u8FDB\u5EA6\u81F3\u4FDD\u5B58\u4E3Ajson\u683C\u5F0F" aria-hidden="true">#</a> 4.\u5B8C\u6574\u4EE3\u7801\uFF08\u8FDB\u5EA6\u81F3\u4FDD\u5B58\u4E3Ajson\u683C\u5F0F\uFF09</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> re<span class="token punctuation">,</span>requests<span class="token punctuation">,</span>os<span class="token punctuation">,</span>time
<span class="token keyword">from</span> Parse <span class="token keyword">import</span> Parse
<span class="token keyword">class</span> <span class="token class-name">Maoyan</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>url<span class="token punctuation">,</span>folder<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>url<span class="token operator">=</span>url
        self<span class="token punctuation">.</span>headers<span class="token operator">=</span><span class="token punctuation">{</span>
            <span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36&quot;</span>
        <span class="token punctuation">}</span>
        self<span class="token punctuation">.</span>asking_url_list<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
        self<span class="token punctuation">.</span>folder_name<span class="token operator">=</span>folder
    <span class="token keyword">def</span> <span class="token function">req_fun</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>
        response<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>self<span class="token punctuation">.</span>headers<span class="token punctuation">)</span>
        <span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code<span class="token operator">==</span><span class="token number">200</span><span class="token punctuation">:</span>
           <span class="token keyword">return</span> response<span class="token punctuation">.</span>text
        <span class="token keyword">return</span> <span class="token boolean">None</span>
    <span class="token keyword">def</span> <span class="token function">url_parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>url<span class="token punctuation">:</span><span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        url_lst<span class="token operator">=</span>url<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;=&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> url_lst<span class="token punctuation">:</span>
            <span class="token keyword">return</span> url_lst<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
        <span class="token keyword">return</span> <span class="token string">&quot;No Parse Parameter&quot;</span>
    <span class="token keyword">def</span> <span class="token function">have_asked</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>asking<span class="token punctuation">)</span><span class="token punctuation">:</span>
        asked_lst_filename<span class="token operator">=</span><span class="token punctuation">[</span>filename<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token keyword">for</span> filename <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span><span class="token string">&quot;html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
        <span class="token keyword">if</span> asking <span class="token operator">+</span> <span class="token string">&quot;.html&quot;</span> <span class="token keyword">in</span> asked_lst_filename <span class="token operator">+</span> self<span class="token punctuation">.</span>asking_url_list<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">False</span>
        <span class="token keyword">return</span> <span class="token boolean">True</span>
    <span class="token keyword">def</span> <span class="token function">folder_exists</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>folder<span class="token punctuation">:</span><span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>folder<span class="token punctuation">)</span><span class="token punctuation">:</span>
            os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span><span class="token string">&quot;html&quot;</span><span class="token punctuation">)</span><span class="token comment">#\u521B\u5EFA\u6587\u4EF6\u540D</span>
    <span class="token keyword">def</span> <span class="token function">save_html</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>content<span class="token punctuation">,</span>filename<span class="token punctuation">,</span>mkdir_r<span class="token operator">=</span><span class="token string">&quot;html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>mkdir_r<span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span>filename<span class="token punctuation">}</span></span><span class="token string">.html&quot;</span></span><span class="token punctuation">,</span><span class="token string">&quot;w&quot;</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>content<span class="token punctuation">)</span>
            f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">engine</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>folder_exists<span class="token punctuation">(</span>self<span class="token punctuation">.</span>folder_name<span class="token punctuation">)</span>
        asking_filename <span class="token operator">=</span> self<span class="token punctuation">.</span>url_parse<span class="token punctuation">(</span>self<span class="token punctuation">.</span>url<span class="token punctuation">)</span>  <span class="token comment">#</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>have_asked<span class="token punctuation">(</span>asking_filename<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token comment">#\u6267\u884C\u8BF7\u6C42</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;The url is requestsing: </span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>url<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>asking_url_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>self<span class="token punctuation">.</span>url<span class="token punctuation">)</span>
            html<span class="token operator">=</span>self<span class="token punctuation">.</span>req_fun<span class="token punctuation">(</span>self<span class="token punctuation">.</span>url<span class="token punctuation">)</span>
            <span class="token comment">#\u5B9A\u4E49</span>
            self<span class="token punctuation">.</span>save_html<span class="token punctuation">(</span>content<span class="token operator">=</span>html<span class="token punctuation">,</span>filename<span class="token operator">=</span>asking_filename<span class="token punctuation">,</span>mkdir_r<span class="token operator">=</span>self<span class="token punctuation">.</span>folder_name<span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Requests url </span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>url<span class="token punctuation">}</span></span><span class="token string">\u5DF2\u7ECF\u8BF7\u6C42\u8FC7\u4E86&quot;</span></span><span class="token punctuation">)</span>
        <span class="token comment"># self.parse(self.folder_name)</span>


<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    folder<span class="token operator">=</span><span class="token string">&quot;html&quot;</span>
    url <span class="token operator">=</span> <span class="token string">&quot;https://www.maoyan.com/board/4?offset={page}&quot;</span>
    <span class="token comment"># \u6355\u83B710\u4E2A\u7F51\u9875\u5230\u6587\u4EF6\u201Dhtml&quot;\u4E2D</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1.5</span><span class="token punctuation">)</span>
        maoyan <span class="token operator">=</span> Maoyan<span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>page<span class="token operator">=</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> folder<span class="token operator">=</span><span class="token string">&quot;html&quot;</span><span class="token punctuation">)</span>
        maoyan<span class="token punctuation">.</span>engine<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
   main<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span>  os<span class="token punctuation">,</span>requests<span class="token punctuation">,</span>re<span class="token punctuation">,</span>xlwt<span class="token punctuation">,</span>xlrd<span class="token punctuation">,</span>urllib<span class="token punctuation">.</span>parse<span class="token punctuation">,</span>pprint<span class="token punctuation">,</span>json
<span class="token keyword">from</span> xlutils<span class="token punctuation">.</span>copy <span class="token keyword">import</span> copy
<span class="token keyword">from</span> pprint <span class="token keyword">import</span> pprint
<span class="token comment"># wb = xlwt.Workbook()</span>
<span class="token comment"># sheet1 = wb.add_sheet(&quot;sheet1&quot;)</span>
<span class="token comment"># head_data = [&quot;\u7535\u5F71\u540D\u79F0&quot;, &quot;\u7535\u5F71\u5C01\u9762&quot;, &quot;\u4E0A\u6620\u65E5\u671F&quot;, &quot;\u8BC4\u5206&quot;]</span>
<span class="token comment"># pos = 0</span>
<span class="token comment"># for i in head_data:</span>
<span class="token comment">#     sheet1.write(0, pos, i)</span>
<span class="token comment">#     pos += 1</span>
<span class="token comment"># wb.save(&quot;\u732B\u773CTop.xls&quot;)</span>

<span class="token keyword">class</span> <span class="token class-name">Parse</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>BASE_URL <span class="token operator">=</span> <span class="token string">&quot;https://www.maoyan.com/&quot;</span>


    <span class="token keyword">def</span> <span class="token function">generate_path</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>folder<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>folder<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">None</span>
        path_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">for</span> dirpath<span class="token punctuation">,</span> dirnames<span class="token punctuation">,</span> filenames <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>folder<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">for</span> filename <span class="token keyword">in</span> filenames<span class="token punctuation">:</span>
                path <span class="token operator">=</span> dirpath <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span><span class="token operator">+</span>filename<span class="token comment">#join\u81EA\u52A8\u8BC6\u522B\u5E73\u53F0\u8DEF\u5F84\u683C\u5F0F\uFF0Cwindow\u548CMac</span>
                path_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>path<span class="token punctuation">)</span>

            <span class="token keyword">return</span> path_list
    <span class="token keyword">def</span> <span class="token function">read_html</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>path<span class="token punctuation">:</span><span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span><span class="token string">&quot;r&quot;</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span><span class="token keyword">as</span> f<span class="token punctuation">:</span>
            <span class="token keyword">return</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">#\u89E3\u6790html\u6587\u4EF6</span>
    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># print(content)</span>
        k_clean <span class="token operator">=</span> re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">&#39;&lt;/i&gt;&lt;i class=&quot;fraction&quot;&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token comment">#\u5148\u66FF\u6362\uFF0C\u65B9\u4FBF\u63D0\u53D6\u8BC4\u5206\u6570\u636E</span>
        pattern<span class="token operator">=</span><span class="token string">&#39;&lt;dd&gt;(?:\\s+)&lt;i class=.*?&lt;/i&gt;(?:\\s+)&lt;a href=&quot;(.*?)&quot;.*?title=&quot;(.*?)&quot;.*?&gt;(?:\\s+)&lt;img src.*?/&gt;(?:\\s+)&lt;img data-src=&quot;(.*?)&quot;.*?/&gt;&#39;</span> \\
                <span class="token string">&#39;*\\s?.*?&lt;p class=&quot;releasetime&quot;&gt;(.*?)&lt;/p&gt;.*?&lt;/div&gt;(?:\\s+).*?(?:\\s+)&lt;p class=&quot;score&quot;.*?&quot;integer&quot;&gt;(\\d\\.\\d).*?&lt;/p&gt;&#39;</span>
        data_lst<span class="token operator">=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>k_clean<span class="token punctuation">,</span>re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>
        <span class="token comment"># print(data_lst)#\u5B58\u653E\u94FE\u63A5\u4FE1\u606F\u7684\u5217\u8868\uFF0C\u5217\u8868\u5143\u7D20\u662F\u5143\u7EC4\uFF1A\u7535\u5F71\u540D\u79F0\uFF0C\u7535\u5F71\u5C01\u9762\uFF0C\u4E0A\u6620\u65E5\u671F\uFF0C\u8BC4\u5206</span>
        <span class="token comment"># print(k_clean)</span>
        good_lst<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">if</span> data_lst<span class="token punctuation">:</span>
            <span class="token keyword">for</span> tup <span class="token keyword">in</span> data_lst<span class="token punctuation">:</span>
                d<span class="token operator">=</span><span class="token punctuation">{</span>
                    <span class="token string">&quot;link&quot;</span><span class="token punctuation">:</span>urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urljoin<span class="token punctuation">(</span>self<span class="token punctuation">.</span>BASE_URL<span class="token punctuation">,</span> tup<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token string">&quot;title&quot;</span><span class="token punctuation">:</span>tup<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    <span class="token string">&quot;img&quot;</span><span class="token punctuation">:</span>tup<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    <span class="token string">&quot;relesstime&quot;</span><span class="token punctuation">:</span>tup<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    <span class="token string">&quot;score&quot;</span><span class="token punctuation">:</span>tup<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>
                <span class="token punctuation">}</span>
                good_lst<span class="token punctuation">.</span>append<span class="token punctuation">(</span>d<span class="token punctuation">)</span>
        <span class="token keyword">return</span>  good_lst
    <span class="token keyword">def</span> <span class="token function">save_json</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>content_dict<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;TopData&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;w&quot;</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
            json<span class="token punctuation">.</span>dump<span class="token punctuation">(</span>content_dict<span class="token punctuation">,</span>f<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">run_parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>folder<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment">#\u8FDB\u884C\u6392\u5E8F</span>
        JSON_TXT<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;MaoYanTop100&quot;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span>
        <span class="token comment"># result_list=[]</span>
        <span class="token keyword">for</span> path <span class="token keyword">in</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>generate_path<span class="token punctuation">(</span>folder<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            html_content <span class="token operator">=</span> self<span class="token punctuation">.</span>read_html<span class="token punctuation">(</span>path<span class="token punctuation">)</span>
            n<span class="token operator">=</span>self<span class="token punctuation">.</span>parse<span class="token punctuation">(</span>html_content<span class="token punctuation">)</span>
            <span class="token comment"># print(list(n))</span>
            JSON_TXT<span class="token punctuation">[</span><span class="token string">&quot;MaoYanTop100&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>save_json<span class="token punctuation">(</span>JSON_TXT<span class="token punctuation">)</span>
        pprint<span class="token punctuation">(</span>JSON_TXT<span class="token punctuation">)</span>
        <span class="token comment"># print(&quot;\u6240\u6709\u9875\u6570\u7684\u5217\u8868\u4FE1\u606F&quot;,result_list)</span>
        <span class="token comment"># print(result_list)</span>
        <span class="token comment"># name_lst=[i[0] for i in result_list]#\u7535\u5F71\u540D\u79F0</span>
        <span class="token comment"># # print(name_lst)</span>
        <span class="token comment"># img_lst=[i[1] for i in result_list]#\u56FE\u7247</span>
        <span class="token comment"># time_lst = [i[2] for i in result_list]#\u4E0A\u6620\u65F6\u95F4</span>
        <span class="token comment"># score_lst = [i[3] for i in result_list]#\u8BC4\u5206</span>
        <span class="token comment"># wb2=xlrd.open_workbook(&quot;\u732B\u773CTop.xls&quot;)</span>
        <span class="token comment"># sheet_odd= wb2.sheet_by_index(0)</span>
        <span class="token comment"># xwb=copy(wb2)</span>
        <span class="token comment"># sheet=xwb.get_sheet(&quot;sheet1&quot;)</span>
        <span class="token comment"># # 2.\u5199\u5165\u722C\u53D6\u7684url\u89E3\u6790\u540E\u7684\u4FE1\u606F</span>
        <span class="token comment"># # print(result_list)</span>
        <span class="token comment"># pos1 = pos2=pos3=pos4= 1</span>
        <span class="token comment"># for i in name_lst:</span>
        <span class="token comment">#     sheet.write(pos1,0,i)</span>
        <span class="token comment">#     pos1+=1</span>
        <span class="token comment"># for i in img_lst:</span>
        <span class="token comment">#     sheet.write(pos2,1,i)</span>
        <span class="token comment">#     pos2+=1</span>
        <span class="token comment"># for i in time_lst:</span>
        <span class="token comment">#     sheet.write(pos3,2,i)</span>
        <span class="token comment">#     pos3+=1</span>
        <span class="token comment"># for i in score_lst:</span>
        <span class="token comment">#     sheet.write(pos4,3,i)</span>
        <span class="token comment">#     pos4+=1</span>
        <span class="token comment"># xwb.save(&quot;\u732B\u773C.xls&quot;)</span>
 
<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    ps <span class="token operator">=</span> Parse<span class="token punctuation">(</span><span class="token punctuation">)</span>
    ps<span class="token punctuation">.</span>run_parse<span class="token punctuation">(</span><span class="token string">&quot;html&quot;</span><span class="token punctuation">)</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8865\u5145-json\u5728\u7EBF\u5DE5\u5177" tabindex="-1"><a class="header-anchor" href="#\u8865\u5145-json\u5728\u7EBF\u5DE5\u5177" aria-hidden="true">#</a> \u8865\u5145\uFF1AJSON\u5728\u7EBF\u5DE5\u5177</h2>`,13),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","TianMaoSave.html.vue"]]);export{r as default};
