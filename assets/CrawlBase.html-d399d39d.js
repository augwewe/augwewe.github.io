import{_ as n,Z as s,$ as a,a2 as t}from"./framework-42135032.js";const p={},e=t(`<h3 id="数据存储至sqlite中" tabindex="-1"><a class="header-anchor" href="#数据存储至sqlite中" aria-hidden="true">#</a> 数据存储至SQLite中</h3><p>1.连接数据库</p><p>2.读取json文件</p><p>3.不知如何将数据形式为列表的存入sqlite中，例如电影剧情分类有武侠，剧情，人物。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    <span class="token keyword">def</span> <span class="token function">read_json</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>filename<span class="token punctuation">,</span>read_type<span class="token operator">=</span><span class="token string">&quot;json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        conn <span class="token operator">=</span> sqlite3<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token string">&#39;D:\\SQLite\\data\\cava.db&#39;</span><span class="token punctuation">)</span>
        conn<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token triple-quoted-string string">&#39;&#39;&#39;
                            CREATE TABLE MOVIE_DETAIL
                            (
                              Id  INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
                              Title  VARCHAR NOT NULL,
                              Introduction VARCHAR NOT NULL,
                              Director VARCHAR NOT NULL,
                              Actor VARCHAR NOT NULL);    
                    &#39;&#39;&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;successfully&quot;</span><span class="token punctuation">)</span>
        target_suffix<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;txt&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;xls&#39;</span><span class="token punctuation">]</span>
        <span class="token keyword">if</span> read_type <span class="token keyword">not</span> <span class="token keyword">in</span> target_suffix<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">None</span>
        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span><span class="token string">&quot;r&quot;</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
            <span class="token keyword">if</span> read_type <span class="token operator">==</span> <span class="token string">&#39;json&#39;</span><span class="token punctuation">:</span>
                data<span class="token operator">=</span>json<span class="token punctuation">.</span>load<span class="token punctuation">(</span>f<span class="token punctuation">)</span>
                <span class="token keyword">for</span> line <span class="token keyword">in</span> data<span class="token punctuation">[</span><span class="token string">&quot;Scrape_detail&quot;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
                    <span class="token keyword">for</span> i <span class="token keyword">in</span> line<span class="token punctuation">:</span>
                        sql <span class="token operator">=</span> <span class="token string">&quot;insert into movie_detail(id,title,introduction,director,actor) values (null,&#39;%s&#39;,&#39;%s&#39;,&#39;%s&#39;,&#39;%s&#39;)&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>i<span class="token punctuation">[</span><span class="token string">&#39;introduction&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">[</span><span class="token string">&#39;director&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">[</span><span class="token string">&#39;actor&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
                        conn<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>
                        conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">elif</span> read_type <span class="token operator">==</span> <span class="token string">&#39;txt&#39;</span><span class="token punctuation">:</span>
                data<span class="token operator">=</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> data
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","CrawlBase.html.vue"]]);export{r as default};
