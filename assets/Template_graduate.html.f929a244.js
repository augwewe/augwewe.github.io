import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,d as e}from"./app.08d473d3.js";const t={},p=e(`<h3 id="\u8BF7\u6C42url-\u5305\u542B\u5F02\u5E38\u6355\u83B7" tabindex="-1"><a class="header-anchor" href="#\u8BF7\u6C42url-\u5305\u542B\u5F02\u5E38\u6355\u83B7" aria-hidden="true">#</a> \u8BF7\u6C42url(\u5305\u542B\u5F02\u5E38\u6355\u83B7)</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">ask_url</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>timeout<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>binary<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">global</span> status<span class="token punctuation">,</span>html<span class="token punctuation">,</span>redirected_url
    the_headers<span class="token operator">=</span><span class="token punctuation">{</span>
        <span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36&quot;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> headers<span class="token punctuation">:</span>
        the_headers<span class="token operator">=</span>headers
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        response<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>the_headers<span class="token punctuation">,</span>timeout<span class="token operator">=</span>timeout<span class="token punctuation">)</span>
        <span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> binary<span class="token punctuation">:</span>
                html<span class="token operator">=</span>response<span class="token punctuation">.</span>content
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                encoding<span class="token operator">=</span>cchardet<span class="token punctuation">.</span>detect<span class="token punctuation">(</span>response<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;encoding&#39;</span><span class="token punctuation">]</span>
                html<span class="token operator">=</span>response<span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span>encoding<span class="token punctuation">)</span>
            status<span class="token operator">=</span>response<span class="token punctuation">.</span>status_code
            redirected_url<span class="token operator">=</span>response<span class="token punctuation">.</span>url

    <span class="token keyword">except</span><span class="token punctuation">(</span>RequestException<span class="token punctuation">,</span>ProxyError<span class="token punctuation">,</span>SSLError<span class="token punctuation">)</span><span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
        <span class="token keyword">if</span> debug<span class="token punctuation">:</span>
            traceback<span class="token punctuation">.</span>print_exc<span class="token punctuation">(</span><span class="token punctuation">)</span>
        msg<span class="token operator">=</span><span class="token string">&#39;Failed downled:{}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>
        <span class="token keyword">if</span> binary<span class="token punctuation">:</span>
            html<span class="token operator">=</span><span class="token string">b&#39;&#39;</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            html<span class="token operator">=</span><span class="token string">&#39;&#39;</span>
        status<span class="token operator">=</span><span class="token number">0</span>
    <span class="token keyword">return</span> status<span class="token punctuation">,</span>html<span class="token punctuation">,</span>redirected_url

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    url<span class="token operator">=</span><span class="token string">&quot;https://ssr1.scrape.center/&quot;</span>
    html<span class="token operator">=</span>ask_url<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),o=[p];function c(l,i){return s(),a("div",null,o)}const k=n(t,[["render",c],["__file","Template_graduate.html.vue"]]);export{k as default};
