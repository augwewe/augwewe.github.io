const s=JSON.parse(`{"key":"v-daa77b70","path":"/Blog/2022/Gra/About_aiottp.html","title":"aiottip","lang":"zh-CN","frontmatter":{"title":"aiottip","date":"2022-10-30T12:04:21.000Z","author":"cava","isOriginal":true,"category":["notebook"],"tag":["python","爬虫"],"icon":"vue","sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"description":"aiottp 概念 iohttp 是一个基于 asyncio 的异步 HTTP 网络模块，它既提供了服务端，又提供了客户端。其中我们用服务端可以搭建一个支持异步处理的服务器，用于处理请求并返回响应，类似于 Django、Flask、Tornado 等一些 Web 服务器。而客户端我们就可以用来发起请求，就类似于 requests 来发起一个 HTTP 请求然后获得响应，但 requests 发起的是同步的网络请求，而 aiohttp 则发起的是异步的。 1. attiop基本案例代码 import aiohttp import asyncio async def fetch(session, url): async with session.get(url) as response: return await response.text(), response.status async def main(): async with aiohttp.ClientSession() as session: html, status = await fetch(session, 'https://augwewe.cn') print(f'html: {html[:100]}...') print(f'status: {status}') if __name__ == '__main__': loop = asyncio.get_event_loop() loop.run_until_complete(main()) 输出---------------------------------------------- html: &lt;!DOCTYPE html&gt; &lt;html lang=\\"zh-CN\\" data-theme=\\"light\\"&gt; &lt;head&gt; &lt;meta charset=\\"utf-8\\" /&gt; &lt;me... status: 200","head":[["meta",{"property":"og:url","content":"https://augwewe.cn/Blog/2022/Gra/About_aiottp.html"}],["meta",{"property":"og:site_name","content":"augwewe"}],["meta",{"property":"og:title","content":"aiottip"}],["meta",{"property":"og:description","content":"aiottp 概念 iohttp 是一个基于 asyncio 的异步 HTTP 网络模块，它既提供了服务端，又提供了客户端。其中我们用服务端可以搭建一个支持异步处理的服务器，用于处理请求并返回响应，类似于 Django、Flask、Tornado 等一些 Web 服务器。而客户端我们就可以用来发起请求，就类似于 requests 来发起一个 HTTP 请求然后获得响应，但 requests 发起的是同步的网络请求，而 aiohttp 则发起的是异步的。 1. attiop基本案例代码 import aiohttp import asyncio async def fetch(session, url): async with session.get(url) as response: return await response.text(), response.status async def main(): async with aiohttp.ClientSession() as session: html, status = await fetch(session, 'https://augwewe.cn') print(f'html: {html[:100]}...') print(f'status: {status}') if __name__ == '__main__': loop = asyncio.get_event_loop() loop.run_until_complete(main()) 输出---------------------------------------------- html: &lt;!DOCTYPE html&gt; &lt;html lang=\\"zh-CN\\" data-theme=\\"light\\"&gt; &lt;head&gt; &lt;meta charset=\\"utf-8\\" /&gt; &lt;me... status: 200"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-18T04:42:15.000Z"}],["meta",{"property":"article:author","content":"cava"}],["meta",{"property":"article:tag","content":"python"}],["meta",{"property":"article:tag","content":"爬虫"}],["meta",{"property":"article:published_time","content":"2022-10-30T12:04:21.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-18T04:42:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"aiottip\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-10-30T12:04:21.000Z\\",\\"dateModified\\":\\"2023-02-18T04:42:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"cava\\"}]}"]]},"headers":[{"level":2,"title":"aiottp","slug":"aiottp","link":"#aiottp","children":[{"level":3,"title":"概念","slug":"概念","link":"#概念","children":[]},{"level":3,"title":"1. attiop基本案例代码","slug":"_1-attiop基本案例代码","link":"#_1-attiop基本案例代码","children":[]},{"level":3,"title":"3. post表单提交","slug":"_3-post表单提交","link":"#_3-post表单提交","children":[]},{"level":3,"title":"4. post json数据提交","slug":"_4-post-json数据提交","link":"#_4-post-json数据提交","children":[]},{"level":3,"title":"5. 返回 响应字段","slug":"_5-返回-响应字段","link":"#_5-返回-响应字段","children":[]},{"level":3,"title":"6. 超时设置","slug":"_6-超时设置","link":"#_6-超时设置","children":[]},{"level":3,"title":"7. 控制并发量（Semaphore)","slug":"_7-控制并发量-semaphore","link":"#_7-控制并发量-semaphore","children":[]},{"level":3,"title":"实战","slug":"实战","link":"#实战","children":[]}]}],"git":{"createdTime":1676651936000,"updatedTime":1676695335000,"contributors":[{"name":"AndersonHJB","email":"aiyuechuang@gmail.com","commits":1},{"name":"augwewe","email":"1085816416@qq.com","commits":1}]},"readingTime":{"minutes":5.06,"words":1519},"filePathRelative":"Blog/2022/Gra/About_aiottp.md","localizedDate":"2022年10月30日","excerpt":"<h2> aiottp</h2>\\n<h3> 概念</h3>\\n<p>iohttp 是一个基于 asyncio 的异步 HTTP 网络模块，它既提供了服务端，又提供了客户端。其中我们用服务端可以搭建一个支持异步处理的服务器，用于处理请求并返回响应，类似于 Django、Flask、Tornado 等一些 Web 服务器。而客户端我们就可以用来发起请求，就类似于 requests 来发起一个 HTTP 请求然后获得响应，但 requests 发起的是同步的网络请求，而 aiohttp 则发起的是异步的。</p>\\n<h3> 1. attiop基本案例代码</h3>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">import</span> aiohttp\\n<span class=\\"token keyword\\">import</span> asyncio\\n\\n\\n<span class=\\"token keyword\\">async</span> <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">fetch</span><span class=\\"token punctuation\\">(</span>session<span class=\\"token punctuation\\">,</span> url<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">async</span> <span class=\\"token keyword\\">with</span> session<span class=\\"token punctuation\\">.</span>get<span class=\\"token punctuation\\">(</span>url<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">as</span> response<span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">await</span> response<span class=\\"token punctuation\\">.</span>text<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> response<span class=\\"token punctuation\\">.</span>status\\n\\n\\n<span class=\\"token keyword\\">async</span> <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">async</span> <span class=\\"token keyword\\">with</span> aiohttp<span class=\\"token punctuation\\">.</span>ClientSession<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">as</span> session<span class=\\"token punctuation\\">:</span>\\n        html<span class=\\"token punctuation\\">,</span> status <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">await</span> fetch<span class=\\"token punctuation\\">(</span>session<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'https://augwewe.cn'</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f'html: </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>html<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">:</span><span class=\\"token format-spec\\">100]</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">...'</span></span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f'status: </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>status<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">'</span></span><span class=\\"token punctuation\\">)</span>\\n\\n\\n<span class=\\"token keyword\\">if</span> __name__ <span class=\\"token operator\\">==</span> <span class=\\"token string\\">'__main__'</span><span class=\\"token punctuation\\">:</span>\\n    loop <span class=\\"token operator\\">=</span> asyncio<span class=\\"token punctuation\\">.</span>get_event_loop<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    loop<span class=\\"token punctuation\\">.</span>run_until_complete<span class=\\"token punctuation\\">(</span>main<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n输出<span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span><span class=\\"token operator\\">-</span>\\nhtml<span class=\\"token punctuation\\">:</span> <span class=\\"token operator\\">&lt;</span>!DOCTYPE html<span class=\\"token operator\\">&gt;</span>\\n<span class=\\"token operator\\">&lt;</span>html lang<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"zh-CN\\"</span> data<span class=\\"token operator\\">-</span>theme<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"light\\"</span><span class=\\"token operator\\">&gt;</span>\\n  <span class=\\"token operator\\">&lt;</span>head<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token operator\\">&lt;</span>meta charset<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"utf-8\\"</span> <span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token operator\\">&lt;</span>me<span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span>\\nstatus<span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">200</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{s as data};
