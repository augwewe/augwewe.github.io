import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,d as t}from"./app.ec199be2.js";const p={},e=t(`<h3 id="\u6570\u636E\u5B58\u50A8\u81F3sqlite\u4E2D" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u5B58\u50A8\u81F3sqlite\u4E2D" aria-hidden="true">#</a> \u6570\u636E\u5B58\u50A8\u81F3SQLite\u4E2D</h3><p>1.\u8FDE\u63A5\u6570\u636E\u5E93</p><p>2.\u8BFB\u53D6json\u6587\u4EF6</p><p>3.\u4E0D\u77E5\u5982\u4F55\u5C06\u6570\u636E\u5F62\u5F0F\u4E3A\u5217\u8868\u7684\u5B58\u5165sqlite\u4E2D\uFF0C\u4F8B\u5982\u7535\u5F71\u5267\u60C5\u5206\u7C7B\u6709\u6B66\u4FA0\uFF0C\u5267\u60C5\uFF0C\u4EBA\u7269\u3002</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>    <span class="token keyword">def</span> <span class="token function">read_json</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>filename<span class="token punctuation">,</span>read_type<span class="token operator">=</span><span class="token string">&quot;json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        conn <span class="token operator">=</span> sqlite3<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token string">&#39;D:\\SQLite\\data\\cava.db&#39;</span><span class="token punctuation">)</span>
        conn<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token triple-quoted-string string">&#39;&#39;&#39;
                            CREATE TABLE MOVIE_DETAIL
                            (
                              Id  INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
                              Title  VARCHAR NOT NULL,
                              Introduction VARCHAR NOT NULL,
                              Director VARCHAR NOT NULL,
                              Actor VARCHAR NOT NULL);    
                    &#39;&#39;&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;successfully&quot;</span><span class="token punctuation">)</span>
        target_suffix<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;txt&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;xls&#39;</span><span class="token punctuation">]</span>
        <span class="token keyword">if</span> read_type <span class="token keyword">not</span> <span class="token keyword">in</span> target_suffix<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">None</span>
        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span><span class="token string">&quot;r&quot;</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
            <span class="token keyword">if</span> read_type <span class="token operator">==</span> <span class="token string">&#39;json&#39;</span><span class="token punctuation">:</span>
                data<span class="token operator">=</span>json<span class="token punctuation">.</span>load<span class="token punctuation">(</span>f<span class="token punctuation">)</span>
                <span class="token keyword">for</span> line <span class="token keyword">in</span> data<span class="token punctuation">[</span><span class="token string">&quot;Scrape_detail&quot;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
                    <span class="token keyword">for</span> i <span class="token keyword">in</span> line<span class="token punctuation">:</span>
                        sql <span class="token operator">=</span> <span class="token string">&quot;insert into movie_detail(id,title,introduction,director,actor) values (null,&#39;%s&#39;,&#39;%s&#39;,&#39;%s&#39;,&#39;%s&#39;)&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>i<span class="token punctuation">[</span><span class="token string">&#39;introduction&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">[</span><span class="token string">&#39;director&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">[</span><span class="token string">&#39;actor&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
                        conn<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>
                        conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">elif</span> read_type <span class="token operator">==</span> <span class="token string">&#39;txt&#39;</span><span class="token punctuation">:</span>
                data<span class="token operator">=</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> data
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),o=[e];function c(i,l){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","CrawlBase.html.vue"]]);export{k as default};
