import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,d as p}from"./app.4a3f6a36.js";const t={},e=p(`<h3 id="\u722C\u866B\u6280\u672F-\u5B58\u50A8\u7F51\u9875\u6240\u6709\u56FE\u7247" tabindex="-1"><a class="header-anchor" href="#\u722C\u866B\u6280\u672F-\u5B58\u50A8\u7F51\u9875\u6240\u6709\u56FE\u7247" aria-hidden="true">#</a> \u722C\u866B\u6280\u672F-\u5B58\u50A8\u7F51\u9875\u6240\u6709\u56FE\u7247</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> re<span class="token punctuation">,</span> requests<span class="token punctuation">,</span>cchardet<span class="token punctuation">,</span>urllib<span class="token punctuation">.</span>parse<span class="token punctuation">,</span>traceback
<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> urlparse
<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> urljoin
<span class="token keyword">from</span> requests<span class="token punctuation">.</span>exceptions <span class="token keyword">import</span> RequestException<span class="token punctuation">,</span>ProxyError<span class="token punctuation">,</span>SSLError

<span class="token keyword">class</span> <span class="token class-name">IMGSAVE</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>url <span class="token operator">=</span> url

    <span class="token keyword">def</span> <span class="token function">ask_url</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>timeout<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>binary<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token string">&quot;https&quot;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> url<span class="token punctuation">:</span>
            url <span class="token operator">=</span> <span class="token string">&quot;https://&quot;</span><span class="token operator">+</span>url
        <span class="token keyword">global</span> status<span class="token punctuation">,</span>html<span class="token punctuation">,</span>redirected_url
        the_headers <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36&quot;</span>
    <span class="token punctuation">}</span>
        <span class="token keyword">if</span> headers<span class="token punctuation">:</span>
            the_headers <span class="token operator">=</span> headers
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            response<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>the_headers<span class="token punctuation">,</span>timeout<span class="token operator">=</span>timeout<span class="token punctuation">)</span>
            <span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>
                <span class="token keyword">if</span> binary<span class="token punctuation">:</span>
                    html <span class="token operator">=</span> response<span class="token punctuation">.</span>content
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    encoding <span class="token operator">=</span> cchardet<span class="token punctuation">.</span>detect<span class="token punctuation">(</span>response<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;encoding&#39;</span><span class="token punctuation">]</span>
                    html <span class="token operator">=</span> response<span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span>encoding<span class="token punctuation">)</span>
                status <span class="token operator">=</span> response<span class="token punctuation">.</span>status_code
                redirected_url <span class="token operator">=</span> response<span class="token punctuation">.</span>url

        <span class="token keyword">except</span><span class="token punctuation">(</span>RequestException<span class="token punctuation">,</span>ProxyError<span class="token punctuation">,</span>SSLError<span class="token punctuation">)</span><span class="token keyword">as</span> e<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
            <span class="token keyword">if</span> debug<span class="token punctuation">:</span>
                traceback<span class="token punctuation">.</span>print_exc<span class="token punctuation">(</span><span class="token punctuation">)</span>
            msg <span class="token operator">=</span> <span class="token string">&#39;Failed downled:{}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>
            <span class="token keyword">if</span> binary<span class="token punctuation">:</span>
                html <span class="token operator">=</span> <span class="token string">b&#39;&#39;</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                html <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
            status<span class="token operator">=</span><span class="token number">0</span>
        <span class="token keyword">return</span> status<span class="token punctuation">,</span>html<span class="token punctuation">,</span>redirected_url

    <span class="token keyword">def</span> <span class="token function">regex</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span>
        pattern <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;img.*?src=&quot;(.*?)&quot;.*?&gt;&#39;</span><span class="token punctuation">,</span>re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>
        result <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>html<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
        <span class="token keyword">return</span> result

    <span class="token keyword">def</span> <span class="token function">save_img</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>filename<span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span><span class="token string">&quot;wb&quot;</span><span class="token punctuation">)</span><span class="token keyword">as</span> fb<span class="token punctuation">:</span>
            fb<span class="token punctuation">.</span>write<span class="token punctuation">(</span>content<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">suffix</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>
        suffix<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;.png&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;.jpg&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;.jpge&quot;</span><span class="token punctuation">]</span> <span class="token comment">#\u53EF\u4EE5\u6DFB\u52A0\u4EFB\u610F\u540E\u7F00\u5230\u5217\u8868\u4E2D</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> suffix<span class="token punctuation">:</span>
            <span class="token keyword">if</span> i <span class="token keyword">not</span> <span class="token keyword">in</span> path<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token keyword">continue</span>
            <span class="token keyword">return</span>  i
    <span class="token keyword">def</span> <span class="token function">start</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>
        status<span class="token punctuation">,</span> html<span class="token punctuation">,</span> redirected_url <span class="token operator">=</span> self<span class="token punctuation">.</span>ask_url<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        template <span class="token operator">=</span> <span class="token string">&quot;{scheme}://{netloc}&quot;</span> 
        the_parse <span class="token operator">=</span> urlparse<span class="token punctuation">(</span>redirected_url<span class="token punctuation">)</span>
        url <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>scheme<span class="token operator">=</span>the_parse<span class="token punctuation">.</span>scheme<span class="token punctuation">,</span> netloc<span class="token operator">=</span>the_parse<span class="token punctuation">.</span>netloc<span class="token punctuation">)</span>  <span class="token comment"># \u6307\u5B9A</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
        r_u <span class="token operator">=</span> self<span class="token punctuation">.</span>regex<span class="token punctuation">(</span>html<span class="token punctuation">)</span>  <span class="token comment"># \u540C\u4E0B\u65B9\u89E3\u6790\u4E2D\u7684path</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> r_u<span class="token punctuation">:</span>
            <span class="token keyword">pass</span>
        img_urls <span class="token operator">=</span> <span class="token punctuation">[</span>urljoin<span class="token punctuation">(</span>url<span class="token punctuation">,</span> img<span class="token punctuation">)</span> <span class="token keyword">for</span> img <span class="token keyword">in</span> r_u<span class="token punctuation">]</span>
        <span class="token comment"># print(img_urls)</span>
        <span class="token keyword">for</span> index<span class="token punctuation">,</span> url <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>img_urls<span class="token punctuation">)</span><span class="token punctuation">:</span>
            postffix <span class="token operator">=</span> self<span class="token punctuation">.</span>suffix<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
            filename <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>postffix<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span>
            content <span class="token operator">=</span> self<span class="token punctuation">.</span>ask_url<span class="token punctuation">(</span>url<span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> binary<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
            self<span class="token punctuation">.</span>save_img<span class="token punctuation">(</span>filename<span class="token punctuation">,</span> content<span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    url<span class="token operator">=</span><span class="token string">&quot;www.bbiquge.net&quot;</span>
    work<span class="token operator">=</span>IMGSAVE<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
    work<span class="token punctuation">.</span>start<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    main<span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="urllib-parse" tabindex="-1"><a class="header-anchor" href="#urllib-parse" aria-hidden="true">#</a> urllib.parse</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>parse

url<span class="token operator">=</span><span class="token string">&quot;https://www.bbiquge.net&quot;</span>
test<span class="token operator">=</span>urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlparse<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span>
\u8F93\u51FA<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>
ParseResult<span class="token punctuation">(</span>scheme<span class="token operator">=</span><span class="token string">&#39;https&#39;</span><span class="token punctuation">,</span> netloc<span class="token operator">=</span><span class="token string">&#39;bornforthis.cn&#39;</span><span class="token punctuation">,</span> path<span class="token operator">=</span><span class="token string">&#39;/1v1/17-R/01.html&#39;</span><span class="token punctuation">,</span> params<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> query<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> fragment<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5904\u7406\u56FE\u7247\u94FE\u63A5\u6A21\u677F" tabindex="-1"><a class="header-anchor" href="#\u5904\u7406\u56FE\u7247\u94FE\u63A5\u6A21\u677F" aria-hidden="true">#</a> \u5904\u7406\u56FE\u7247\u94FE\u63A5\u6A21\u677F</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>url<span class="token operator">=</span><span class="token string">&quot;https://bornforthis.cn/assets/image-20230104195900212-3876c2ce.pngxxxxxx&quot;</span>
<span class="token keyword">def</span> <span class="token function">suffix</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>
    suffix<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;.png&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;.jpg&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;.jpge&quot;</span><span class="token punctuation">]</span> <span class="token comment">#\u53EF\u4EE5\u6DFB\u52A0\u4EFB\u610F\u540E\u7F00\u5230\u5217\u8868\u4E2D</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> suffix<span class="token punctuation">:</span>
        <span class="token keyword">if</span> i <span class="token keyword">not</span> <span class="token keyword">in</span> path<span class="token punctuation">:</span>
            <span class="token keyword">continue</span>
        pos<span class="token operator">=</span>path<span class="token punctuation">.</span>find<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>path<span class="token punctuation">[</span>pos<span class="token punctuation">:</span>pos<span class="token operator">+</span><span class="token builtin">len</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
suffix<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
\u8F93\u51FA<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>
<span class="token punctuation">.</span>png
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(t,[["render",c],["__file","Img_Save.html.vue"]]);export{k as default};
