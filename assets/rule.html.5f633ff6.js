import{_ as s}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as n,c as a,d as p}from"./app.361c7d09.js";const t="/assets/n1.b0f2ec41.png",o="/assets/n2.05ab6de1.png",e={},r=p('<h2 id="\u6B63\u5219\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u6B63\u5219\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> \u6B63\u5219\u8868\u8FBE\u5F0F</h2><h3 id="\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u6A21\u5F0F" aria-hidden="true">#</a> \u6A21\u5F0F</h3><p><img src="'+t+'" alt="n1" loading="lazy"></p><p><img src="'+o+`" alt="n2" loading="lazy"></p><h3 id="\u5E38\u89C4\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#\u5E38\u89C4\u5339\u914D" aria-hidden="true">#</a> \u5E38\u89C4\u5339\u914D</h3><h3 id="atttention" tabindex="-1"><a class="header-anchor" href="#atttention" aria-hidden="true">#</a> atttention:</h3><p>re.match(pattern,string,flag=0)</p><p>\u4ECE\u5B57\u7B26\u7684\u8D77\u59CB\u4F4D\u7F6E\u5339\u914D\u4E00\u4E2A\u6A21\u5F0F\uFF0C\u5982\u679C\u4E0D\u662F\u8D77\u59CB\u4F4D\u7F6E\u5339\u914D\u6210\u529F,match()\u8FD4\u56DEnone</p><p>\\w\u53EA\u80FD\u5339\u914D\u5230\u4E00\u4E2A\u6570\u5B57/\u5B57\u6BCD</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> re
content<span class="token operator">=</span><span class="token string">&quot;Hello 123 4567 Word_This is a Regex Demo&quot;</span>
pattern<span class="token operator">=</span><span class="token string">&quot;^Hello\\s\\d\\d\\d\\s\\d{4}\\s\\w+\\s.*Demo$&quot;</span>
result<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>content<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#\u83B7\u53D6\u5230\u5339\u914D\u7684\u5BF9\u8C61</span>
<span class="token comment">#\u8F93\u51FA</span>
<span class="token operator">&lt;</span>re<span class="token punctuation">.</span>Match <span class="token builtin">object</span><span class="token punctuation">;</span> span<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">match</span><span class="token operator">=</span><span class="token string">&#39;Hello 123 4567 Word_This is a Regex Demo&#39;</span><span class="token operator">&gt;</span>
Hello <span class="token number">123</span> <span class="token number">4567</span> Word_This <span class="token keyword">is</span> a Regex Demo
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>
content <span class="token operator">=</span> <span class="token string">&quot;Ethanol, Ethyl Alcohol Absolute 200 1L&quot;</span>
pattern<span class="token operator">=</span><span class="token string">&quot;^Ethanol\\S\\s\\w+\\s.*1L$&quot;</span>
result<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>content<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6CDB\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#\u6CDB\u5339\u914D" aria-hidden="true">#</a> \u6CDB\u5339\u914D</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>content<span class="token operator">=</span><span class="token string">&quot;Hello 123 4567 Word_This is a Regex Demo&quot;</span>
pattern<span class="token operator">=</span><span class="token string">&quot;^H.*o$&quot;</span><span class="token comment">#&quot;^H.+o$&quot;</span>
result<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>content<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5339\u914D\u7279\u5B9A\u76EE\u6807" tabindex="-1"><a class="header-anchor" href="#\u5339\u914D\u7279\u5B9A\u76EE\u6807" aria-hidden="true">#</a> \u5339\u914D\u7279\u5B9A\u76EE\u6807</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>content<span class="token operator">=</span><span class="token string">&quot;Hello 123 4567 Word_This is a Regex Demo&quot;</span>
pattern<span class="token operator">=</span><span class="token string">&quot;^H.*\\s(\\d{3})\\s.*Demo$&quot;</span><span class="token comment">#</span>
result<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>content<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#1,2\u83B7\u53D6\u4E24\u4E2A\u5185\u5BB9</span>
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>
a <span class="token operator">=</span> <span class="token string">&quot;Beakers, Plastic, Polypropylene, 2000mL&quot;</span>
pattern<span class="token operator">=</span><span class="token string">&quot;^Beakers\\S\\s(\\w+)\\S\\s\\w+\\S\\s(\\w+)$&quot;</span>
result<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>a<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>
content<span class="token operator">=</span><span class="token string">&quot;Filter, Vacuum System, PES Membrane, 0.2&quot;</span>
pattern<span class="token operator">=</span><span class="token string">&quot;^Filter\\S\\s(\\w{5})\\w+\\s\\w+\\S\\s(\\w+)\\s\\w+\\S\\s(\\d\\S\\d)$&quot;</span>
result<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>content<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8D2A\u5A6A\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#\u8D2A\u5A6A\u5339\u914D" aria-hidden="true">#</a> \u8D2A\u5A6A\u5339\u914D</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>content<span class="token operator">=</span><span class="token string">&quot;Hello 123 4567 Word_This is a Regex Demo&quot;</span>
pattern<span class="token operator">=</span><span class="token string">&quot;^H.*(\\d{3})\\s.*Demo$&quot;</span>  <span class="token comment">#\u8F93\u51FA567</span>
<span class="token comment">#\\d+\u4F1A\u8F93\u51FA7,\u81F3\u5C11\u4FDD\u7559\u4E00\u4E2A\uFF1B\\d* \u6CA1\u6709\u8F93\u51FA</span>
<span class="token comment">#*\u63A7\u5236\u8F93\u51FA\u6570\u5B57\uFF0C</span>

result<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>content<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),c=[r];function l(i,u){return n(),a("div",null,c)}const m=s(e,[["render",l],["__file","rule.html.vue"]]);export{m as default};
